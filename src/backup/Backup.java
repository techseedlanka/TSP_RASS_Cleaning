/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package backup;

import java.awt.Toolkit;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import net.lingala.zip4j.core.ZipFile;
import net.lingala.zip4j.model.ZipParameters;
import net.lingala.zip4j.util.Zip4jConstants;

/**
 *
 * @author RavenPC
 */
public class Backup extends javax.swing.JDialog {

    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Creates new form Backup
     */
    public Backup(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        TitleBar();
    }

    
    
     private void TitleBar() {

        this.setTitle(" Backup ");

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("techseed.png")));

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmd = new javax.swing.JButton();
        icon = new javax.swing.JLabel();
        lbMessage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmd.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        cmd.setText("OK");
        cmd.setEnabled(false);
        cmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdActionPerformed(evt);
            }
        });
        getContentPane().add(cmd, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 103, -1));

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/loading_.gif"))); // NOI18N
        getContentPane().add(icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 72, -1));

        lbMessage.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbMessage.setText("Backup in Progress...");
        getContentPane().add(lbMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 200, 30));

        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 170));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        th = new Thread(new Runnable() {
            @Override
            public void run() {
                String db_Name = DataCon.DB;
                try {
                    Process p;
                    Runtime run = Runtime.getRuntime();
                    File file = new File("");
                    String path = file.getAbsolutePath();
                    String command = path + "\\mysqldump -u" + DataCon.USER + " -p" + DataCon.PASS + " --add-drop-database -B " + DataCon.DB + " -r \"" + new File("").getAbsolutePath() + "\\" + db_Name + "_db.sql\"";
                    p = run.exec(command);
                    int pro = p.waitFor();
                    if (pro == 0) {
                        icon.setIcon(new ImageIcon(getClass().getResource("/icon/success.png")));
                        cmd.setEnabled(true);
                        lbMessage.setText("Backup created successfully...");
                        zipFile(new File("" + db_Name + "_db.sql"), getPath());
                    } else {
                        icon.setIcon(new ImageIcon(getClass().getResource("/icon/error.png")));
                        cmd.setEnabled(true);
                        lbMessage.setText("Backup Error " + pro);
                    }
                } catch (Exception e) {
                    icon.setIcon(new ImageIcon(getClass().getResource("/icon/error.png")));
                    lbMessage.setText("Backup Error");
                    JOptionPane.showMessageDialog(Backup.this, e, "Error", JOptionPane.ERROR_MESSAGE);
                }
                File fdb = new File("" + db_Name+ "_db.sql");
                fdb.delete();
                setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                cmd.grabFocus();
                cmd.setEnabled(true);
            }
        });
        th.start();
    }//GEN-LAST:event_formWindowOpened

    private void cmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdActionPerformed
        this.dispose();
    }//GEN-LAST:event_cmdActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (!cmd.isEnabled()) {
            if (JOptionPane.showConfirmDialog(this, "Are you sure to cancel ?", "Cancel backuping", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                th.interrupt();
                th = null;
                this.dispose();
            }
        } else {
            this.dispose();
        }
    }//GEN-LAST:event_formWindowClosing
    private void zipFile(File fileToZip, String pathOut) throws Exception {
        ZipFile zf = new ZipFile(pathOut);
        ZipParameters zpara = new ZipParameters();
        zpara.setCompressionMethod(Zip4jConstants.COMP_DEFLATE);
        zpara.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL);
        zpara.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES);
        zpara.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256);
        zpara.setEncryptFiles(true);
        zpara.setPassword("Celestar@369");
        zf.addFile(fileToZip, zpara);
    }
    private String path;
    private Thread th;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Backup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Backup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Backup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Backup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Backup dialog = new Backup(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbMessage;
    // End of variables declaration//GEN-END:variables
}
