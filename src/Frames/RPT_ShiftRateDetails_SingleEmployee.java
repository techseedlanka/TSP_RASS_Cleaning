/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sapu
 */
public class RPT_ShiftRateDetails_SingleEmployee extends javax.swing.JFrame {

    /**
     * Creates new form RPT_ShiftRateDetails_SingleEmployee
     */
    public RPT_ShiftRateDetails_SingleEmployee() {
        initComponents();
        Employee_auto_completer();
        Location_auto_completer();
    }

    private void Employee_auto_completer() {

        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from employee_reg where IsResigned=0 ");

            TextAutoCompleter ta = new TextAutoCompleter(txt_emp_name);

            while (rs.next()) {
                String code = rs.getString("EmployeeNo");
                String NameWithInitials = rs.getString("NameWithInitials");

                ta.addItem(code);
                ta.addItem(NameWithInitials);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void Location_auto_completer() {

        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from location_reg   ");

            TextAutoCompleter ta = new TextAutoCompleter(txt_locName);

            while (rs.next()) {
                String code = rs.getString("LocCode");
                String NameWithInitials = rs.getString("LocName");

                ta.addItem(code);
                ta.addItem(NameWithInitials);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmb_year = new javax.swing.JComboBox();
        cmb_month = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        txt_empid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_emp_name = new javax.swing.JTextField();
        txt_locName = new javax.swing.JTextField();
        txt_locCode = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator10 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText("Rate Change Shift Details Report");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 320, 40));

        cmb_year.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        cmb_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020" }));
        cmb_year.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_yearPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, -1, -1));

        cmb_month.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        getContentPane().add(cmb_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, -1));

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setText("Please Process the Attendance (if not) Before Generate this Report.");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 390, 20));
        getContentPane().add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 560, 710, 10));

        txt_empid.setEditable(false);
        txt_empid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_empid, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 100, 23));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel6.setText("Month / Year  :-");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel7.setText("Location  :-");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, 20));

        txt_emp_name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_emp_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_emp_nameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_emp_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 290, 23));

        txt_locName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_locName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_locNameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_locName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 290, 23));

        txt_locCode.setEditable(false);
        txt_locCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_locCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 100, 23));

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel8.setText("Employee  :-");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, 20));

        jCheckBox1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jCheckBox1.setText("All");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, -1, -1));

        jButton1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search.png"))); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, 120, 90));

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loc. Code", "Location Name", "Date", "Day", "Night", "Shift Rate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(23);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(280);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 670, 380));
        getContentPane().add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 710, 10));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_yearPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_yearPopupMenuWillBecomeInvisible
        //        int mm = cmb_month.getSelectedIndex();
        //        int int_month = mm + 1;
        //        String month = String.format("%02d", int_month);
        //
        //        String year = cmb_year.getSelectedItem().toString();
        //        int int_year = Integer.parseInt(year);
        //
        //        String d1 = (year + "-" + month + "-" + "01");
        //        String d2 = (year + "-" + month + "-" + "02");
        //        String d3 = (year + "-" + month + "-" + "03");
        //        String d4 = (year + "-" + month + "-" + "04");
        //        String d5 = (year + "-" + month + "-" + "05");
        //        String d6 = (year + "-" + month + "-" + "06");
        //        String d7 = (year + "-" + month + "-" + "07");
        //        String d8 = (year + "-" + month + "-" + "08");
        //        String d9 = (year + "-" + month + "-" + "09");
        //        String d10 = (year + "-" + month + "-" + "10");
        //        String d11 = (year + "-" + month + "-" + "11");
        //        String d12 = (year + "-" + month + "-" + "12");
        //        String d13 = (year + "-" + month + "-" + "13");
        //        String d14 = (year + "-" + month + "-" + "14");
        //        String d15 = (year + "-" + month + "-" + "15");
        //        String d16 = (year + "-" + month + "-" + "16");
        //        String d17 = (year + "-" + month + "-" + "17");
        //        String d18 = (year + "-" + month + "-" + "18");
        //        String d19 = (year + "-" + month + "-" + "19");
        //        String d20 = (year + "-" + month + "-" + "20");
        //        String d21 = (year + "-" + month + "-" + "21");
        //        String d22 = (year + "-" + month + "-" + "22");
        //        String d23 = (year + "-" + month + "-" + "23");
        //        String d24 = (year + "-" + month + "-" + "24");
        //        String d25 = (year + "-" + month + "-" + "25");
        //        String d26 = (year + "-" + month + "-" + "26");
        //        String d27 = (year + "-" + month + "-" + "27");
        //        String d28 = (year + "-" + month + "-" + "28");
        //        String d29 = (year + "-" + month + "-" + "29");
        //        String d30 = (year + "-" + month + "-" + "30");
        //        String d31 = (year + "-" + month + "-" + "31");
        //
        //        String d1d = "0";
        //        String d2d = "0";
        //        String d3d = "0";
        //        String d4d = "0";
        //        String d5d = "0";
        //        String d6d = "0";
        //        String d7d = "0";
        //        String d8d = "0";
        //        String d9d = "0";
        //        String d10d = "0";
        //        String d11d = "0";
        //        String d12d = "0";
        //        String d13d = "0";
        //        String d14d = "0";
        //        String d15d = "0";
        //        String d16d = "0";
        //        String d17d = "0";
        //        String d18d = "0";
        //        String d19d = "0";
        //        String d20d = "0";
        //        String d21d = "0";
        //        String d22d = "0";
        //        String d23d = "0";
        //        String d24d = "0";
        //        String d25d = "0";
        //        String d26d = "0";
        //        String d27d = "0";
        //        String d28d = "0";
        //        String d29d = "0";
        //        String d30d = "0";
        //        String d31d = "0";
        //
        //        String d1n = "0";
        //        String d2n = "0";
        //        String d3n = "0";
        //        String d4n = "0";
        //        String d5n = "0";
        //        String d6n = "0";
        //        String d7n = "0";
        //        String d8n = "0";
        //        String d9n = "0";
        //        String d10n = "0";
        //        String d11n = "0";
        //        String d12n = "0";
        //        String d13n = "0";
        //        String d14n = "0";
        //        String d15n = "0";
        //        String d16n = "0";
        //        String d17n = "0";
        //        String d18n = "0";
        //        String d19n = "0";
        //        String d20n = "0";
        //        String d21n = "0";
        //        String d22n = "0";
        //        String d23n = "0";
        //        String d24n = "0";
        //        String d25n = "0";
        //        String d26n = "0";
        //        String d27n = "0";
        //        String d28n = "0";
        //        String d29n = "0";
        //        String d30n = "0";
        //        String d31n = "0";
        //
        //        String d1h = "0";
        //        String d2h = "0";
        //        String d3h = "0";
        //        String d4h = "0";
        //        String d5h = "0";
        //        String d6h = "0";
        //        String d7h = "0";
        //        String d8h = "0";
        //        String d9h = "0";
        //        String d10h = "0";
        //        String d11h = "0";
        //        String d12h = "0";
        //        String d13h = "0";
        //        String d14h = "0";
        //        String d15h = "0";
        //        String d16h = "0";
        //        String d17h = "0";
        //        String d18h = "0";
        //        String d19h = "0";
        //        String d20h = "0";
        //        String d21h = "0";
        //        String d22h = "0";
        //        String d23h = "0";
        //        String d24h = "0";
        //        String d25h = "0";
        //        String d26h = "0";
        //        String d27h = "0";
        //        String d28h = "0";
        //        String d29h = "0";
        //        String d30h = "0";
        //        String d31h = "0";
        //
        //        try {
        //
        //            Statement st = DbConnection.getconnection().createStatement();
        //
        //            ResultSet rs = st.executeQuery("select LocName,Location, Date, SUM(DayShift),SUM(NightShift),SUM(HalfDayShift) from `location_reg`INNER JOIN `emp_atten_main`  ON location_reg.`LocCode` = emp_atten_main.`Location` where Month='February' group by Date");
        //
        //            //ResultSet rs = st.executeQuery("SELECT Location, Date, SUM(DayShift),SUM(NightShift),SUM(HalfDayShift) FROM `location_reg`INNER JOIN `emp_atten_main`  ON location_reg.`LocCode` = emp_atten_main.`Location`  WHERE MONTH='" + cmb_month.getSelectedItem().toString() + "' GROUP BY Date ");
        //            while (rs.next()) {
        //
        //                String Date = rs.getString("Date");
        //
        //                if (Date.equals(d1)) {
        //
        //                    d1d = rs.getString("SUM(DayShift)");
        //                    d1n = rs.getString("SUM(NightShift)");
        //
        //                    String half = rs.getString("SUM(HalfDayShift)");
        //                    Double halfday = Double.parseDouble(half);
        //
        //                    d1h = Double.toString(halfday / 2);
        //
        //                }
        //                if (Date.equals(d2)) {
        //
        //                    d2d = rs.getString("SUM(DayShift)");
        //                    d2n = rs.getString("SUM(NightShift)");
        //
        //                    String half = rs.getString("SUM(HalfDayShift)");
        //                    Double halfday = Double.parseDouble(half);
        //
        //                    d2h = Double.toString(halfday / 2);
        //
        //                }
        //                if (Date.equals(d3)) {
        //
        //                    d3d = rs.getString("SUM(DayShift)");
        //                    d3n = rs.getString("SUM(NightShift)");
        //
        //                    String half = rs.getString("SUM(HalfDayShift)");
        //                    Double halfday = Double.parseDouble(half);
        //
        //                    d3h = Double.toString(halfday / 2);
        //
        //                }
        //
        //                String LocCode = rs.getString("Location");
        //                String LocName = rs.getString("LocName");
        //
        //                System.out.println(LocCode);
        //                System.out.println(LocName);
        //
        //                bean_ateen_summery bds = new bean_ateen_summery();
        //
        //                bds.setL_code(LocCode);
        //                bds.setL_name(LocName);
        //
        //                bds.setDay1day(d1d);
        //                bds.setDay1night(d1n);
        //                bds.setDay1half(d1h);
        //
        //                bds.setDay2day(d2d);
        //                bds.setDay2night(d2n);
        //                bds.setDay2half(d2h);
        //
        //                atten_sum.add(bds);
        //            }
        //
        //            print();
        //
        //        } catch (Exception e) {
        //            e.printStackTrace();
        //        }
    }//GEN-LAST:event_cmb_yearPopupMenuWillBecomeInvisible

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {

            String sql;
            String month = cmb_month.getSelectedItem().toString();
            String year = cmb_year.getSelectedItem().toString();

            if (jCheckBox1.isSelected()) {

                sql = "select * from emp_atten_main where Month='" + month + "' and Year='" + year + "' and EmployeeNo='" + txt_empid.getText() + "' order by Date";

            } else {

                sql = "select * from emp_atten_main where Month='" + month + "' and Year='" + year + "' and EmployeeNo='" + txt_empid.getText() + "' and Location='" + txt_locCode.getText() + "' order by Date";

            }

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery(sql);

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {

                String loc = rs.getString("Location");
                String locName="";
                Statement st1 = DbConnection.getconnection().createStatement();
                ResultSet rs1 = st1.executeQuery("select LocName from location_reg where LocCode='" + loc + "'");
                while(rs1.next()){
                
                      locName=rs1.getString("LocName");
                
                }

                //

                Vector v = new Vector();

                v.add(rs.getString("Location"));
                v.add(locName);
                v.add(rs.getString("Date"));
                v.add(rs.getString("DayShift"));
                v.add(rs.getString("NightShift"));
                v.add(rs.getString("EffectiveRate"));
                
                dtm.addRow(v);

            }

        } catch (Exception e) {

            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, e);

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_emp_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emp_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("select * from employee_reg where EPFno='" + txt_emp_name.getText() + "' or NameWithInitials='" + txt_emp_name.getText() + "'");
                while (rs.next()) {

                    txt_emp_name.setText(rs.getString("NameWithInitials"));
                    txt_empid.setText(rs.getString("EPFno"));

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_emp_nameKeyPressed

    private void txt_locNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_locNameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("select * from location_reg where LocCode='" + txt_locName.getText() + "' or LocName='" + txt_locName.getText() + "'");
                while (rs.next()) {

                    txt_locCode.setText(rs.getString("LocCode"));
                    txt_locName.setText(rs.getString("LocName"));

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locNameKeyPressed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged


    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {

            txt_locName.setEditable(false);
            txt_locName.setText("All Locations");
            txt_locCode.setText("All");

        } else {

            txt_locName.setEditable(true);
            txt_locName.setText("");
            txt_locCode.setText("");

        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RPT_ShiftRateDetails_SingleEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RPT_ShiftRateDetails_SingleEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RPT_ShiftRateDetails_SingleEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RPT_ShiftRateDetails_SingleEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RPT_ShiftRateDetails_SingleEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_month;
    private javax.swing.JComboBox cmb_year;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_emp_name;
    private javax.swing.JTextField txt_empid;
    private javax.swing.JTextField txt_locCode;
    private javax.swing.JTextField txt_locName;
    // End of variables declaration//GEN-END:variables
}
