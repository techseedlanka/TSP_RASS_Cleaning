/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Sapu
 */
public class Salary_Manual_Adjustments extends javax.swing.JFrame {

    /**
     * Creates new form Salary_Manual_Adjustments
     */
    private ImageIcon format = null;

    public Salary_Manual_Adjustments() {
        initComponents();
        get_Location_Details();
        button_color();
        lbl_saved_deduc_EPFNO.setVisible(false);
        lbl_saved_earn_EPFNO.setVisible(false);
        employee_auto_completer();
        txt_empNic.setVisible(false);
    }
    String daysTotal = "0";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void button_color() {

        //delete_row button 
        Color cl1 = new Color(238, 152, 152);
        btn_delete_row.setContentAreaFilled(false);
        btn_delete_row.setBackground(cl1);//178 255 102
        btn_delete_row.setOpaque(true);

        //btn_add button 
        //delete_row button 
        Color cl2 = new Color(178, 255, 102);
        btn_add.setContentAreaFilled(false);
        btn_add.setBackground(cl2);//178 255 102
        btn_add.setOpaque(true);

    }

    private void clear() {
        txt_fines.setText("0");
        txt_Sunday_noOfDays.setText("0");
        txt_Sunday_perDay.setText("0");
        txt_Sunday_total.setText("0");
        txt_adva01.setText("0");
        txt_adva02.setText("0");
        txt_death.setText("0");

        txt_festiv_adva.setText("0");
//        txt_fine.setText("0");
        txt_insua.setText("0");
        txt_lessShift.setText("0");
        txt_loanRent.setText("0");
        txt_machine.setText("0");
        txt_meal.setText("0");

        txt_other.setText("0");
        txt_pettycash.setText("0");
        txt_poyaday.setText("0");

        txt_rental.setText("0");

//        txt_shoe.setText("0");
        txt_uni.setText("0");
        // txt_welfare.setText("");
        lbl_no_ofSunday.setText("0");
        txt_loanRent2.setText("0");
        txt_poyaDayAmt.setText("0");
        txt_poyadayNos1.setText("0");

    }

    private void clearAll() {
        txt_empLoc.setText("");
        txt_empid.setText("");
        txt_rank.setText("");
        txt_search.setText("");
        txt_name.setText("");

        DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
        dtm2.setRowCount(0);

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
    }

    private void employee_auto_completer() {

        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from employee_reg where IsResigned=0 ");

            TextAutoCompleter ta = new TextAutoCompleter(txt_search);

            while (rs.next()) {

                String NameWithInitials = rs.getString("NameWithInitials");
                ta.addItem(NameWithInitials);

            }

        } catch (Exception e) {
            System.out.println("errr");
            e.printStackTrace();

        }

    }

    private void Earning_SAVE() {

        String month = cmb_month.getSelectedItem().toString();
        String year = cmb_year.getSelectedItem().toString();
        String epf = txt_empid.getText();

        try {

            //Earnings Save
            String noOfSunday = "0";
            String perDay = "0";
            String perPoya = txt_poyaDayAmt.getText();
            String poya = txt_poyaday.getText();
            String mc = txt_machine.getText();
            String other = txt_other.getText();

            Statement st = DbConnection.getconnection().createStatement();
            st.executeUpdate("insert into salary_manual_earnings values ('" + epf + "','" + noOfSunday + "','" + perDay + "','" + perPoya + "','" + poya + "','" + mc + "','" + txt_atten.getText() + "','" + txt_special.getText() + "','" + other + "','" + month + "','" + year + "') ");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void Dedauction_SAVE() {

        String month = cmb_month.getSelectedItem().toString();
        String year = cmb_year.getSelectedItem().toString();
        String epf = txt_empid.getText();

        try {

            String welfare = txt_welfare.getText();
            String meal = txt_meal.getText();
//            String fines = txt_fine.getText();
            String rental = txt_rental.getText();
            String less = txt_lessShift.getText();
            String otherD = txt_pettycash.getText();
            String death = txt_death.getText();
            String fines = txt_fines.getText();
            String insu = txt_insua.getText();
            String lessDays = txt_lessShift_Days.getText();

            Statement st = DbConnection.getconnection().createStatement();
            st.executeUpdate("insert into salary_manual_deductions values('" + epf + "','" + welfare + "','" + meal + "','" + fines + "','" + rental + "','" + less + "','" + lessDays + "','" + otherD + "','" + death + "','" + insu + "','" + month + "','" + year + "') ");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void Earning_UPDATE() {

        String month = cmb_month.getSelectedItem().toString();
        String year = cmb_year.getSelectedItem().toString();
        String epf = txt_empid.getText();

        try {

            //Earnings Save
            String noOfSunday = "0";
            String perDay = "0";
            String Sundaytotal = "0";
            String poya = txt_poyaday.getText();
            String mc = txt_machine.getText();
            String other = txt_other.getText();

            Statement st = DbConnection.getconnection().createStatement();
            st.executeUpdate("update salary_manual_earnings set  SunDays='" + noOfSunday + "', PerDayAmt_Sunday ='" + perDay + "', Poyadays='" + poya + "', MachineAllow='" + mc + "',AttenAllow='" + txt_atten.getText() + "',SpecialAllow='" + txt_special.getText() + "', OtherAllow='" + other + "', Month='" + month + "', Year= '" + year + "' where EMPno='" + epf + "'  ");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void Dedauction_UPDATE() {

        String month = cmb_month.getSelectedItem().toString();
        String year = cmb_year.getSelectedItem().toString();
        String epf = txt_empid.getText();

        try {

            String welfare = txt_welfare.getText();
            String meal = txt_meal.getText();
//            String fines = txt_fine.getText();
            String rental = txt_rental.getText();
            String less = txt_lessShift.getText();
            String otherD = txt_pettycash.getText();
            String death = txt_death.getText();
            String fines = txt_fines.getText();
            String insu = txt_insua.getText();
            String lessDays = txt_lessShift_Days.getText();

            Statement st = DbConnection.getconnection().createStatement();
            st.executeUpdate("update salary_manual_deductions set Welfare='" + welfare + "',Meal='" + meal + "',Fines='" + fines + "',Rental='" + rental + "',LessShift='" + less + "',LessShiftDays='" + lessDays + "',OtherDeduc='" + otherD + "',DeathDonation='" + death + "',Insuarance='" + insu + "',Month='" + month + "',Year='" + year + "' where EPFno='" + epf + "' ");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_search = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txt_empLoc = new javax.swing.JTextField();
        txt_empid = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_rank = new javax.swing.JTextField();
        txt_name = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        cmb_month = new javax.swing.JComboBox();
        cmb_year = new javax.swing.JComboBox();
        txt_poyaday = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_Sunday_perDay = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_Sunday_total = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_Sunday_noOfDays = new javax.swing.JTextField();
        txt_machine = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txt_other = new javax.swing.JTextField();
        txt_welfare = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_meal = new javax.swing.JTextField();
        txt_rental = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txt_death = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txt_pettycash = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txt_insua = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txt_fines = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txt_lessShift = new javax.swing.JTextField();
        txt_adva01 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txt_adva02 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txt_festiv_adva = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txt_loanRent = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txt_uni = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        btn_save = new javax.swing.JButton();
        btn_print3 = new javax.swing.JButton();
        btn_print2 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_add = new javax.swing.JButton();
        cmb_defLocation = new javax.swing.JComboBox();
        txt_locName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        txt_poyaDayAmt = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txt_poyadayNos1 = new javax.swing.JTextField();
        lbl_no_ofSunday = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        txt_lessShift_RAte = new javax.swing.JTextField();
        txt_lessShift_Days = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        txt_loanRent2 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        btn_delete_row = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lbl_saved_earn_EPFNO = new javax.swing.JLabel();
        lbl_saved_deduc_EPFNO = new javax.swing.JLabel();
        btn_save1 = new javax.swing.JButton();
        btn_print4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel50 = new javax.swing.JLabel();
        txt_atten = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        txt_special = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        txt_empLocName = new javax.swing.JTextField();
        txt_empNic = new javax.swing.JTextField();
        txt_empNic3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_search.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchFocusGained(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchKeyPressed(evt);
            }
        });
        getContentPane().add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 340, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 40, 50));

        jLabel33.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel33.setText("Effective Salary Month / Year  :-");
        getContentPane().add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, 20));

        txt_empLoc.setEditable(false);
        txt_empLoc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_empLoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 50, 50, 23));

        txt_empid.setEditable(false);
        txt_empid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_empid, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 60, 23));

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel8.setText("Total Shifts :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 80, 30));

        txt_rank.setEditable(false);
        txt_rank.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_rank, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 50, 70, 23));

        txt_name.setEditable(false);
        txt_name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 50, 270, 23));

        jButton2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton2.setText("View Photo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 75, 110, -1));
        getContentPane().add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 630, 1190, 10));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText("Manual Salary Adjustments");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 240, 40));
        getContentPane().add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1190, 10));

        cmb_month.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmb_month.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 204)));
        cmb_month.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_monthPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        cmb_year.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        cmb_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2018", "2019", "2020", "2021", "2022", "2023", "2025" }));
        cmb_year.setSelectedIndex(3);
        cmb_year.setSelectedItem("2017");
        cmb_year.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 204)));
        cmb_year.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_yearPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, -1, -1));

        txt_poyaday.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_poyaday.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_poyadayFocusGained(evt);
            }
        });
        txt_poyaday.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_poyadayKeyTyped(evt);
            }
        });
        getContentPane().add(txt_poyaday, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, 90, 25));

        jLabel35.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(204, 0, 0));
        jLabel35.setText("*");
        getContentPane().add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 30, -1));

        jLabel10.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        jLabel10.setText("No. of Days");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, -1, 20));

        txt_Sunday_perDay.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_Sunday_perDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_Sunday_perDayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_Sunday_perDayFocusLost(evt);
            }
        });
        txt_Sunday_perDay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_Sunday_perDayKeyTyped(evt);
            }
        });
        getContentPane().add(txt_Sunday_perDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, 80, 25));

        jLabel12.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        jLabel12.setText("Per Day Amt:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, 20));

        txt_Sunday_total.setEditable(false);
        txt_Sunday_total.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_Sunday_total.setText("0.00");
        txt_Sunday_total.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_Sunday_totalFocusGained(evt);
            }
        });
        getContentPane().add(txt_Sunday_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 80, 25));

        jLabel13.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        jLabel13.setText("Total");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 40, 20));

        txt_Sunday_noOfDays.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_Sunday_noOfDays.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_Sunday_noOfDaysFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_Sunday_noOfDaysFocusLost(evt);
            }
        });
        txt_Sunday_noOfDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_Sunday_noOfDaysActionPerformed(evt);
            }
        });
        txt_Sunday_noOfDays.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_Sunday_noOfDaysKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_Sunday_noOfDaysKeyTyped(evt);
            }
        });
        getContentPane().add(txt_Sunday_noOfDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 40, 25));

        txt_machine.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_machine.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_machineFocusGained(evt);
            }
        });
        txt_machine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_machineKeyTyped(evt);
            }
        });
        getContentPane().add(txt_machine, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 470, 80, 25));

        jLabel15.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel15.setText("Machine Allow: :-");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 470, -1, 25));

        jLabel16.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel16.setText("=");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 420, 10, 20));

        txt_other.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_other.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_otherFocusGained(evt);
            }
        });
        txt_other.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_otherKeyTyped(evt);
            }
        });
        getContentPane().add(txt_other, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 470, 70, 25));

        txt_welfare.setEditable(false);
        txt_welfare.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_welfare.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_welfareFocusGained(evt);
            }
        });
        getContentPane().add(txt_welfare, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 450, 80, 25));

        jLabel18.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel18.setText("Welfare :-");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 450, -1, 20));

        jLabel19.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel19.setText("Meal :-");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 210, -1, 20));

        txt_meal.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_meal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_mealFocusGained(evt);
            }
        });
        txt_meal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mealActionPerformed(evt);
            }
        });
        txt_meal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_mealKeyTyped(evt);
            }
        });
        getContentPane().add(txt_meal, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 210, 100, 25));

        txt_rental.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_rental.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_rentalFocusGained(evt);
            }
        });
        txt_rental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_rentalActionPerformed(evt);
            }
        });
        txt_rental.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_rentalKeyTyped(evt);
            }
        });
        getContentPane().add(txt_rental, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 240, 100, 25));

        jLabel21.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel21.setText("Rental :-");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, -1, 20));

        txt_death.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_death.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_deathFocusGained(evt);
            }
        });
        txt_death.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_deathKeyTyped(evt);
            }
        });
        getContentPane().add(txt_death, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, 100, 25));

        jLabel22.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel22.setText("Death Donation :-");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, -1, 20));

        txt_pettycash.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_pettycash.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pettycashFocusGained(evt);
            }
        });
        txt_pettycash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_pettycashKeyTyped(evt);
            }
        });
        getContentPane().add(txt_pettycash, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 270, 100, 25));

        jLabel23.setFont(new java.awt.Font("Georgia", 0, 11)); // NOI18N
        jLabel23.setText(" Other Deduction :-");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, -1, 20));

        txt_insua.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_insua.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_insuaFocusGained(evt);
            }
        });
        txt_insua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_insuaKeyTyped(evt);
            }
        });
        getContentPane().add(txt_insua, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 330, 100, 25));

        jLabel24.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel24.setText("Insuarance :-");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, 80, 20));

        txt_fines.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_fines.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_finesFocusGained(evt);
            }
        });
        txt_fines.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_finesKeyTyped(evt);
            }
        });
        getContentPane().add(txt_fines, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 360, 100, 25));

        jLabel25.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel25.setText(" Fines :-");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 360, -1, 20));

        txt_lessShift.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_lessShift.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_lessShiftFocusGained(evt);
            }
        });
        txt_lessShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_lessShiftActionPerformed(evt);
            }
        });
        getContentPane().add(txt_lessShift, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 450, 60, 25));

        txt_adva01.setEditable(false);
        txt_adva01.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_adva01.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_adva01FocusGained(evt);
            }
        });
        getContentPane().add(txt_adva01, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 210, 80, 25));

        jLabel27.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel27.setText(" Advance 01 :-");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 210, -1, 20));

        txt_adva02.setEditable(false);
        txt_adva02.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_adva02.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_adva02FocusGained(evt);
            }
        });
        getContentPane().add(txt_adva02, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 250, 80, 25));

        jLabel28.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel28.setText(" Advance 02 :-");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 250, -1, 20));

        txt_festiv_adva.setEditable(false);
        txt_festiv_adva.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_festiv_adva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_festiv_advaFocusGained(evt);
            }
        });
        getContentPane().add(txt_festiv_adva, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 290, 80, 25));

        jLabel29.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel29.setText(" Festival Adv. :-");
        getContentPane().add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 290, -1, 20));

        txt_loanRent.setEditable(false);
        txt_loanRent.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_loanRent.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_loanRentFocusGained(evt);
            }
        });
        getContentPane().add(txt_loanRent, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 370, 80, 25));

        jLabel30.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel30.setText("Loan 01 :-");
        getContentPane().add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 370, -1, 20));

        txt_uni.setEditable(false);
        txt_uni.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_uni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_uniFocusGained(evt);
            }
        });
        getContentPane().add(txt_uni, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 330, 80, 25));

        jLabel31.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel31.setText("Uniforms :-");
        getContentPane().add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 330, -1, 20));
        getContentPane().add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 1190, 10));

        btn_save.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save 1.png"))); // NOI18N
        btn_save.setText("Save Deductions");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 560, 450, 40));

        btn_print3.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btn_print3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Eraser.png"))); // NOI18N
        btn_print3.setText("Delete Deductions");
        btn_print3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_print3ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_print3, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 490, 200, 40));

        btn_print2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btn_print2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        btn_print2.setText("Clear All");
        btn_print2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_print2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_print2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 560, 280, 60));

        jLabel37.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(204, 0, 0));
        jLabel37.setText("*");
        getContentPane().add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 30, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. Of Days", "Per Day Amt:", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 270, 80));

        btn_add.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btn_add.setText("Add");
        btn_add.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        getContentPane().add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 70, -1));

        cmb_defLocation.setEditable(true);
        cmb_defLocation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_defLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=Location=" }));
        cmb_defLocation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmb_defLocationFocusGained(evt);
            }
        });
        cmb_defLocation.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_defLocationPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_defLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 250, -1));

        txt_locName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_locName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_locNameFocusGained(evt);
            }
        });
        getContentPane().add(txt_locName, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, 450, 23));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel4.setText("Location:-");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 60, 40));

        jLabel39.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel39.setText(" Other Allow:  :-");
        getContentPane().add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 100, 25));

        txt_poyaDayAmt.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_poyaDayAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_poyaDayAmtFocusGained(evt);
            }
        });
        txt_poyaDayAmt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_poyaDayAmtKeyTyped(evt);
            }
        });
        getContentPane().add(txt_poyaDayAmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 70, 25));

        jLabel40.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel40.setText("X");
        getContentPane().add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, -1, 20));

        txt_poyadayNos1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_poyadayNos1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_poyadayNos1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_poyadayNos1FocusLost(evt);
            }
        });
        txt_poyadayNos1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_poyadayNos1KeyTyped(evt);
            }
        });
        getContentPane().add(txt_poyadayNos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, 30, 25));

        lbl_no_ofSunday.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        getContentPane().add(lbl_no_ofSunday, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 80, 20));

        jLabel41.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        jLabel41.setText("Per Day Amt:");
        getContentPane().add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, -1, 20));

        jLabel42.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        jLabel42.setText("Grand Total");
        getContentPane().add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 70, 20));

        jLabel43.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        jLabel43.setText("Shift Rate");
        getContentPane().add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 430, -1, 20));

        jLabel44.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        jLabel44.setText("No. of Days");
        getContentPane().add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 430, -1, 20));

        jLabel45.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel45.setText("X");
        getContentPane().add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, -1, 20));

        jLabel46.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        jLabel46.setText("Total");
        getContentPane().add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 430, 40, 20));

        jLabel47.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel47.setText("=");
        getContentPane().add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 450, 10, 20));

        txt_lessShift_RAte.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_lessShift_RAte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_lessShift_RAteFocusGained(evt);
            }
        });
        txt_lessShift_RAte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_lessShift_RAteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_lessShift_RAteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_lessShift_RAteKeyTyped(evt);
            }
        });
        getContentPane().add(txt_lessShift_RAte, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 450, 60, 25));

        txt_lessShift_Days.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_lessShift_Days.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_lessShift_DaysFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_lessShift_DaysFocusLost(evt);
            }
        });
        txt_lessShift_Days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_lessShift_DaysActionPerformed(evt);
            }
        });
        txt_lessShift_Days.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_lessShift_DaysKeyTyped(evt);
            }
        });
        getContentPane().add(txt_lessShift_Days, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 450, 40, 25));

        jLabel48.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel48.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)), "Less Shift / No-Pay", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 0, 12))); // NOI18N
        getContentPane().add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 400, 250, 90));

        txt_loanRent2.setEditable(false);
        txt_loanRent2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_loanRent2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_loanRent2FocusGained(evt);
            }
        });
        getContentPane().add(txt_loanRent2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 410, 80, 25));

        jLabel49.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel49.setText(" Loan 02 :-");
        getContentPane().add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 410, -1, 20));

        btn_delete_row.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_delete_row.setText("Delete Row");
        btn_delete_row.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_delete_row.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_rowActionPerformed(evt);
            }
        });
        getContentPane().add(btn_delete_row, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 80, 20));

        jLabel38.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel38.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)), "Poya Days", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 0, 12))); // NOI18N
        getContentPane().add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 290, 80));

        jLabel17.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel17.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)), "Additional Shift Amounts", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 0, 12))); // NOI18N
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 400, 160));

        lbl_saved_earn_EPFNO.setText("Earn");
        getContentPane().add(lbl_saved_earn_EPFNO, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 80, 20));

        lbl_saved_deduc_EPFNO.setText("Deduc");
        getContentPane().add(lbl_saved_deduc_EPFNO, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 80, 20));

        btn_save1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btn_save1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save 1.png"))); // NOI18N
        btn_save1.setText("Save Earnings");
        btn_save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_save1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_save1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, 180, 40));

        btn_print4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btn_print4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Eraser.png"))); // NOI18N
        btn_print4.setText("Delete Earnings");
        btn_print4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_print4ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_print4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 560, 170, 40));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Plus-40.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 290, 30, 28));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Plus-40.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 330, 30, 28));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Plus-40.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 370, 30, 28));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Plus-40.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 410, 30, 28));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Plus-40.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 210, 30, 28));

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Plus-40.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 250, 30, 28));

        jLabel14.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Deductions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 1, 14))); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, 470, 450));

        jButton9.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Available Updates.png"))); // NOI18N
        jButton9.setText("Refresh Details");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 0, -1, 40));

        jLabel26.setFont(new java.awt.Font("Georgia", 2, 11)); // NOI18N
        jLabel26.setText("No. of Days");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, 20));

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane3.setViewportBorder(javax.swing.BorderFactory.createTitledBorder(null, "Previously Saved Dedcution Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Georgia", 0, 14))); // NOI18N

        jTable2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meal", "Rental", "Other Deductions", "Less Shift Total", "Death Donations", "Insuarance", "Fines"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(23);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(80);
        }

        jScrollPane3.setViewportView(jScrollPane2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 180, 290, 290));

        jLabel50.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel50.setText("Attendance Allow:  :-");
        getContentPane().add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 510, -1, 25));

        txt_atten.setEditable(false);
        txt_atten.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_atten.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_attenFocusGained(evt);
            }
        });
        txt_atten.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_attenKeyTyped(evt);
            }
        });
        getContentPane().add(txt_atten, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 510, 80, 25));

        jLabel51.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel51.setText("Special Allow: :-");
        getContentPane().add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, -1, 25));

        txt_special.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_special.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_specialFocusGained(evt);
            }
        });
        txt_special.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_specialKeyTyped(evt);
            }
        });
        getContentPane().add(txt_special, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 510, 70, 25));

        jLabel36.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel36.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Earnings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 1, 14))); // NOI18N
        getContentPane().add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 410, 450));

        txt_empLocName.setEditable(false);
        txt_empLocName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_empLocName, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 50, 300, 23));

        txt_empNic.setEditable(false);
        txt_empNic.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        getContentPane().add(txt_empNic, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 130, 21));

        txt_empNic3.setEditable(false);
        txt_empNic3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        getContentPane().add(txt_empNic3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 80, 30));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusGained

    }//GEN-LAST:event_txt_searchFocusGained

    private void txt_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            cmb_month.setSelectedIndex(0);
            cmb_year.setSelectedIndex(0);

            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("select * from employee_reg");
                while (rs.next()) {
                    String code = rs.getString("EmployeeNo");
                    String nic = rs.getString("NIC");
                    String name = rs.getString("NameWithInitials");
                    String rate = rs.getString("ShiftRate");
                    String welfare = rs.getString("Welfare");

                    String rank = rs.getString("Designation");

                    byte[] imagedata = rs.getBytes("EMPImage");

                    if (txt_search.getText().equals(code) || txt_search.getText().equals(name)) {

                        if (imagedata == null) {

                            format = new ImageIcon("imagedata");

                        } else {

                            format = new ImageIcon(imagedata);

                        }

                        txt_empid.setText(code);
                        txt_name.setText(name);
                        txt_empLoc.setText(nic);
                        txt_lessShift_RAte.setText(rate);
                        txt_rank.setText(rank);
                        txt_welfare.setText(welfare);

                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_searchKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        photo_test pt = new photo_test();
        pt.lbl_test.setIcon(format);
        pt.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmb_yearPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_yearPopupMenuWillBecomeInvisible
        get_SAVED_EARN_DEDUC_DETAILS();
    }//GEN-LAST:event_cmb_yearPopupMenuWillBecomeInvisible

    private void txt_poyadayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_poyadayFocusGained

    }//GEN-LAST:event_txt_poyadayFocusGained

    private void txt_Sunday_perDayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_Sunday_perDayFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_Sunday_perDayFocusGained

    private void txt_Sunday_totalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_Sunday_totalFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_Sunday_totalFocusGained

    private void txt_Sunday_perDayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_Sunday_perDayFocusLost

    }//GEN-LAST:event_txt_Sunday_perDayFocusLost

    private void txt_Sunday_noOfDaysFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_Sunday_noOfDaysFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_Sunday_noOfDaysFocusGained

    private void txt_machineFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_machineFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_machineFocusGained

    private void txt_otherFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_otherFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_otherFocusGained

    private void txt_welfareFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_welfareFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_welfareFocusGained

    private void txt_mealFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_mealFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mealFocusGained

    private void txt_rentalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_rentalFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rentalFocusGained

    private void txt_deathFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_deathFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_deathFocusGained

    private void txt_pettycashFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pettycashFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_pettycashFocusGained

    private void txt_insuaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_insuaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_insuaFocusGained

    private void txt_finesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_finesFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_finesFocusGained

    private void txt_lessShiftFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_lessShiftFocusGained
        Double a = Double.parseDouble(txt_lessShift_Days.getText());
        Double b = Double.parseDouble(txt_lessShift_RAte.getText());

        Double c = a * b;
        txt_lessShift.setText(Double.toString(c));

    }//GEN-LAST:event_txt_lessShiftFocusGained

    private void txt_adva01FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_adva01FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_adva01FocusGained

    private void txt_adva02FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_adva02FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_adva02FocusGained

    private void txt_festiv_advaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_festiv_advaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_festiv_advaFocusGained

    private void txt_loanRentFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_loanRentFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_loanRentFocusGained

    private void txt_uniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_uniFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_uniFocusGained

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed

        if (txt_empid.getText().isEmpty() | cmb_month.getSelectedItem().toString().isEmpty() | cmb_year.getSelectedItem().toString().isEmpty()) {

            JOptionPane.showMessageDialog(rootPane, "EPF_No / Month / Year Can't be empty");

        } else {
            empty_text_fields();
            Dedauction_SAVE();
            JOptionPane.showMessageDialog(rootPane, " Deductions Saved... ");

//            if (ExistingDeducEPFno.equals(txt_empid.getText())) {
//                //UPDATE
//
//                Dedauction_UPDATE();
//                JOptionPane.showMessageDialog(rootPane, txt_name.getText() + "'s Deductions Updated... ");
//            } else {
//                //SAVE
//                empty_text_fields();
//
//                Dedauction_SAVE();
//                JOptionPane.showMessageDialog(rootPane, " Deductions Saved... ");
//            }
            clear();
            clearAll();
            txt_welfare.setText("");
            txt_search.grabFocus();

        }

    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_print2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_print2ActionPerformed
        clearAll();
        clear();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);

        txt_welfare.setText("");
        txt_special.setText("");
        txt_atten.setText("");
        txt_other.setText("");
        txt_machine.setText("");

    }//GEN-LAST:event_btn_print2ActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed

        if (txt_Sunday_noOfDays.getText().isEmpty() | txt_Sunday_perDay.getText().isEmpty()) {

        } else {

            Double days = Double.parseDouble(txt_Sunday_noOfDays.getText());
            Double perDay = Double.parseDouble(txt_Sunday_perDay.getText());

            Double days_total = 0.00;
//        Double GrandTotal = Double.parseDouble(txt_Sunday_total.getText());

            Double total = days * perDay;
//        Double full_Total = total + GrandTotal;

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            Vector v = new Vector();
            v.add(days);
            v.add(perDay);
            v.add(total);
            dtm.addRow(v);

            //txt_Sunday_noOfDays.setText("");
            int nrow = jTable1.getModel().getRowCount();
            Double Stotal = 0.00;
            Double Daytotal = 0.00;

            for (int i = 0; nrow > i; i++) {

                Double sum_total = (Double) jTable1.getModel().getValueAt(i, 2);
                Stotal += sum_total;

                days_total = (Double) jTable1.getModel().getValueAt(i, 0);
                Daytotal += days_total;
            }

            lbl_no_ofSunday.setText(Double.toString(Daytotal));

            String Gtotal = String.format("%.2f", (Stotal));
            txt_Sunday_total.setText(Gtotal);
            txt_atten.setText(Gtotal);

        }


    }//GEN-LAST:event_btn_addActionPerformed

    private void cmb_defLocationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_defLocationFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_defLocationFocusGained

    private void cmb_defLocationPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_defLocationPopupMenuWillBecomeInvisible

        if (cmb_defLocation.getSelectedItem().equals("=Location=")) {

            txt_locName.setText("** Please Select a Location ");
            txt_locName.setForeground(Color.red);

        } else {
            txt_locName.setForeground(Color.black);
            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("SELECT * from location_reg where LocCode= '" + cmb_defLocation.getSelectedItem().toString() + "' OR LocName = '" + cmb_defLocation.getSelectedItem().toString() + "'");
                while (rs.next()) {

                    String name = rs.getString("LocName");
                    String code = rs.getString("LocCode");

                    txt_locName.setText(name);
                    cmb_defLocation.setSelectedItem(code);
                }

                ResultSet rs1 = st.executeQuery("select * from salary_rates where LocCode= '" + cmb_defLocation.getSelectedItem().toString() + "' and Rank ='" + txt_rank.getText() + "'");

                while (rs1.next()) {

                    String rankAmt = rs1.getString("Sunday");
                    txt_Sunday_perDay.setText(rankAmt);
                    String poya = rs1.getString("Poyaday");
                    txt_poyaDayAmt.setText(poya);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

            get_SAVED_EARN_DEDUC_DETAILS();

        }
    }//GEN-LAST:event_cmb_defLocationPopupMenuWillBecomeInvisible

    private void txt_locNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locNameFocusGained


    }//GEN-LAST:event_txt_locNameFocusGained

    private void txt_poyaDayAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_poyaDayAmtFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_poyaDayAmtFocusGained

    private void txt_poyadayNos1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_poyadayNos1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_poyadayNos1FocusGained

    private void txt_poyadayNos1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_poyadayNos1FocusLost
        Double z = 0.00;

        if (txt_poyaDayAmt.getText().isEmpty()) {
        } else {

            Double x = Double.parseDouble(txt_poyaDayAmt.getText());
            Double y = Double.parseDouble(txt_poyadayNos1.getText());

            z = x * y;

        }

        String Gtotal = String.format("%.2f", z);
        txt_poyaday.setText(Gtotal);
    }//GEN-LAST:event_txt_poyadayNos1FocusLost

    private void txt_lessShift_DaysFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_lessShift_DaysFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lessShift_DaysFocusGained

    private void txt_lessShift_RAteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_lessShift_RAteFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lessShift_RAteFocusGained

    private void txt_lessShift_DaysFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_lessShift_DaysFocusLost
        Double z = 0.00;

        if (txt_poyaDayAmt.getText().isEmpty()) {
        } else {

            Double x = Double.parseDouble(txt_lessShift_Days.getText());
            Double y = Double.parseDouble(txt_lessShift_RAte.getText());

            z = x * y;

        }

        String Gtotal = String.format("%.2f", z);
        txt_lessShift.setText(Gtotal);        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lessShift_DaysFocusLost

    private void txt_loanRent2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_loanRent2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_loanRent2FocusGained

    private void btn_delete_rowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_rowActionPerformed
        int select_row = jTable1.getSelectedRowCount();

        if (select_row == 0) {
        } else {

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.removeRow(jTable1.getSelectedRow());

            txt_Sunday_total.setText("0.00");

            int nrow = jTable1.getModel().getRowCount();
            Double Stotal = 0.00;
            for (int i = 0; nrow > i; i++) {

                Double sum_total = (Double) jTable1.getModel().getValueAt(i, 2);
                Stotal += sum_total;

            }
            String Gtotal = String.format("%.2f", (Stotal));

            txt_Sunday_total.setText(Gtotal);

        }

    }//GEN-LAST:event_btn_delete_rowActionPerformed

    private void btn_save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_save1ActionPerformed
        if (txt_empid.getText().isEmpty() | cmb_month.getSelectedItem().toString().isEmpty() | cmb_year.getSelectedItem().toString().isEmpty()) {

            JOptionPane.showMessageDialog(rootPane, "EMP No / Month / Year Can't be empty");

        } else {

            if (lbl_saved_earn_EPFNO.getText().equals(txt_empid.getText())) {
                //UPDATE
                empty_text_fields();

                Earning_UPDATE();
                JOptionPane.showMessageDialog(rootPane, txt_name.getText() + "'s Earnings Updated... ");

            } else {
//SAVE
                empty_text_fields();

                Earning_SAVE();
                JOptionPane.showMessageDialog(rootPane, " Earnings Saved... ");

            }

            txt_Sunday_noOfDays.setText("");
            txt_Sunday_perDay.setText("");
            txt_Sunday_total.setText("");
            txt_other.setText("");
            txt_machine.setText("");
            txt_poyaday.setText("");
            txt_poyadayNos1.setText("");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            txt_welfare.setText("");

        }        // TODO add your handling code here:
    }//GEN-LAST:event_btn_save1ActionPerformed

    private void btn_print3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_print3ActionPerformed
        int reply = JOptionPane.showConfirmDialog(rootPane, "Do You want to Delete this Epmloyee's Duductions for Selected Month? ", null, JOptionPane.YES_NO_OPTION);

        if (reply == JOptionPane.YES_OPTION) {
            try {

                Statement st = DbConnection.getconnection().createStatement();
                st.executeUpdate("delete from salary_manual_deductions  where EPFno='" + txt_empid.getText() + "' and Month='" + cmb_month.getSelectedItem().toString() + "' and Year='" + cmb_year.getSelectedItem().toString() + "' ");

                DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
                dtm.setRowCount(0);

                JOptionPane.showMessageDialog(rootPane, " Deductions Deleted... ");

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {

        }        // TODO add your handling code here:
    }//GEN-LAST:event_btn_print3ActionPerformed

    private void btn_print4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_print4ActionPerformed

        int reply = JOptionPane.showConfirmDialog(rootPane, "Do you want to Delete this Epmloyee's Earnings for Selected Month? ", null, JOptionPane.YES_NO_OPTION);

        if (reply == JOptionPane.YES_OPTION) {
            try {

                Statement st = DbConnection.getconnection().createStatement();
                st.executeUpdate("delete from salary_manual_earnings  where EMPno='" + txt_empid.getText() + "' and Month='" + cmb_month.getSelectedItem().toString() + "' and Year='" + cmb_year.getSelectedItem().toString() + "' ");

                JOptionPane.showMessageDialog(rootPane, " Earning Deleted... ");

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btn_print4ActionPerformed

    private void cmb_monthPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_monthPopupMenuWillBecomeInvisible
        get_SAVED_EARN_DEDUC_DETAILS();        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_monthPopupMenuWillBecomeInvisible

    private void txt_mealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mealActionPerformed
        txt_rental.grabFocus();
    }//GEN-LAST:event_txt_mealActionPerformed

    private void txt_rentalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_rentalActionPerformed
        txt_pettycash.grabFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rentalActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Advances adv = new Advances();

        adv.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Advances adv = new Advances();
        adv.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Advances adv = new Advances();
        adv.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Distress_Loan adv = new Distress_Loan();
        adv.setVisible(true);          // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Distress_Loan adv = new Distress_Loan();
        adv.setVisible(true);          // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Uniforms_And_Shoes adv = new Uniforms_And_Shoes();
        adv.setVisible(true);         // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        get_SAVED_EARN_DEDUC_DETAILS();          // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void txt_mealKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mealKeyTyped

        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_meal.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }
    }//GEN-LAST:event_txt_mealKeyTyped

    private void txt_rentalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_rentalKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_rental.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rentalKeyTyped

    private void txt_deathKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_deathKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_death.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_txt_deathKeyTyped

    private void txt_finesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_finesKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_fines.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }   // TODO add your handling code here:
    }//GEN-LAST:event_txt_finesKeyTyped

    private void txt_pettycashKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pettycashKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_pettycash.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_txt_pettycashKeyTyped

    private void txt_insuaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_insuaKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_insua.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }   // TODO add your handling code here:
    }//GEN-LAST:event_txt_insuaKeyTyped

    private void txt_Sunday_perDayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_Sunday_perDayKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_Sunday_perDay.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }    // TODO add your handling code here:
    }//GEN-LAST:event_txt_Sunday_perDayKeyTyped

    private void txt_Sunday_noOfDaysKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_Sunday_noOfDaysKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_Sunday_noOfDays.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

//                int n = Integer.parseInt(txt_Sunday_noOfDays.getText());
//                if (n > 5) {
//                    JOptionPane.showMessageDialog(rootPane, "Invalid Entry");
//                } else {
//                }
            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_txt_Sunday_noOfDaysKeyTyped

    private void txt_poyaDayAmtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_poyaDayAmtKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_poyaDayAmt.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }    // TODO add your handling code here:
    }//GEN-LAST:event_txt_poyaDayAmtKeyTyped

    private void txt_poyadayNos1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_poyadayNos1KeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_poyaday.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }   // TODO add your handling code here:
    }//GEN-LAST:event_txt_poyadayNos1KeyTyped

    private void txt_poyadayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_poyadayKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_poyaday.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }   // TODO add your handling code here:
    }//GEN-LAST:event_txt_poyadayKeyTyped

    private void txt_otherKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_otherKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_other.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }  // TODO add your handling code here:
    }//GEN-LAST:event_txt_otherKeyTyped

    private void txt_machineKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_machineKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_machine.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }  // TODO add your handling code here:
    }//GEN-LAST:event_txt_machineKeyTyped

    private void txt_Sunday_noOfDaysKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_Sunday_noOfDaysKeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_txt_Sunday_noOfDaysKeyPressed

    private void txt_Sunday_noOfDaysFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_Sunday_noOfDaysFocusLost

        if (txt_Sunday_noOfDays.getText().equals("")) {
            txt_Sunday_noOfDays.setText("0");
        } else {
            Double n = Double.parseDouble(txt_Sunday_noOfDays.getText());
            if (n > 5.00) {
                JOptionPane.showMessageDialog(rootPane, "no. of Sundays : Invalid Entry");
            } else {
            }
        }

    }//GEN-LAST:event_txt_Sunday_noOfDaysFocusLost

    private void txt_Sunday_noOfDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_Sunday_noOfDaysActionPerformed
        txt_Sunday_perDay.grabFocus();
    }//GEN-LAST:event_txt_Sunday_noOfDaysActionPerformed

    private void txt_lessShift_RAteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lessShift_RAteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lessShift_RAteKeyPressed

    private void txt_lessShift_RAteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lessShift_RAteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lessShift_RAteKeyReleased

    private void txt_lessShift_RAteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lessShift_RAteKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_lessShift_RAte.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }           // TODO add your handling code here:
    }//GEN-LAST:event_txt_lessShift_RAteKeyTyped

    private void txt_lessShift_DaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_lessShift_DaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lessShift_DaysActionPerformed

    private void txt_lessShift_DaysKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lessShift_DaysKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_lessShift_Days.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_txt_lessShift_DaysKeyTyped

    private void txt_lessShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_lessShiftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lessShiftActionPerformed

    private void txt_attenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_attenFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_attenFocusGained

    private void txt_attenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_attenKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_atten.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_txt_attenKeyTyped

    private void txt_specialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_specialFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_specialFocusGained

    private void txt_specialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_specialKeyTyped
        if (Character.isDigit(evt.getKeyChar()) | (evt.getKeyChar() == KeyEvent.VK_PERIOD)) {

            char text[];
            int count = 0;

            text = txt_special.getText().toCharArray();
            for (int i = 0; i < text.length; i++) {

                if (text[i] == '.') {
                    count++;
                }

            }
            if (count >= 1 && evt.getKeyChar() == '.') {
                evt.consume();
            }

        } else {
            evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_txt_specialKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Salary_Manual_Adjustments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Salary_Manual_Adjustments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Salary_Manual_Adjustments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Salary_Manual_Adjustments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Salary_Manual_Adjustments().setVisible(true);
            }
        });
    }

    private void get_Location_Details() {
        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * from location_reg order by LocName");

            while (rs.next()) {

                Object name = rs.getString("LocName");
                //Object code = rs.getString("LocCode");

                // cmb_defLocation.addItem(code);
                cmb_defLocation.addItem(name);
            }

            AutoCompleteDecorator.decorate(cmb_defLocation);

        } catch (Exception e) {
        }

    }

    static String ExistingDeducEPFno = "";
    static String ExistingEarnEPFno = "";

    private void get_SAVED_EARN_DEDUC_DETAILS() {

        try {

            // clear();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
            dtm2.setRowCount(0);

            Statement st1 = DbConnection.getconnection().createStatement();
            ResultSet rs1 = st1.executeQuery("select * from salary_manual_earnings where EMPno='" + txt_empid.getText() + "' and Year='" + cmb_year.getSelectedItem().toString() + "' and Month='" + cmb_month.getSelectedItem().toString() + "'");
            while (rs1.next()) {

                //  DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                String sun = rs1.getString("SunDays");
                Double Dsun = 0.00;
                if (sun.isEmpty() | sun == null) {
                    sun = "0";
                } else {
                    Dsun = Double.parseDouble(sun);
                }

                String perday_sun = rs1.getString("PerDayAmt_Sunday");
                Double Dperday_sun = 0.00;
                if (perday_sun.isEmpty() | perday_sun == null) {
                    perday_sun = "0";
                } else {
                    Dperday_sun = Double.parseDouble(perday_sun);
                }

                Vector v = new Vector();
                v.add(Dsun);
                v.add(Dperday_sun);
                v.add(Dsun * Dperday_sun);

                dtm.addRow(v);

                txt_other.setText(rs1.getString("OtherAllow"));
                txt_machine.setText(rs1.getString("MachineAllow"));
                txt_atten.setText(rs1.getString("AttenAllow"));
                txt_special.setText(rs1.getString("SpecialAllow"));

                txt_poyaDayAmt.setText(rs1.getString("PerDayAmt_Poyaday"));
                txt_poyadayNos1.setText(rs1.getString("Poyadays"));

                lbl_saved_earn_EPFNO.setText(rs1.getString("EMPno"));
                ExistingEarnEPFno = rs1.getString("EMPno");

            }

            Statement st2 = DbConnection.getconnection().createStatement();
            //ResultSet rs2 = st2.executeQuery("select *,SUM(Meal),SUM(Rental),SUM(OtherDeduc),SUM(LessShift),SUM(DeathDonation),SUM(Insuarance),SUM(PaidSalary10th)  from salary_manual_deductions where EPFno='" + txt_empid.getText() + "' and Year='" + cmb_year.getSelectedItem().toString() + "' and Month='" + cmb_month.getSelectedItem().toString() + "'");

            ResultSet rs2 = st2.executeQuery("select * from salary_manual_deductions where EPFno='" + txt_empid.getText() + "' and Year='" + cmb_year.getSelectedItem().toString() + "' and Month='" + cmb_month.getSelectedItem().toString() + "'");

            while (rs2.next()) {

                // String meal = rs2.getString("SUM(Meal)");
                Vector v2 = new Vector();
                //v2.add("55");

                v2.add(rs2.getString("Meal"));
                v2.add(rs2.getString("Rental"));
                v2.add(rs2.getString("OtherDeduc"));
                v2.add(rs2.getString("LessShift"));
                v2.add(rs2.getString("DeathDonation"));
                v2.add(rs2.getString("Insuarance"));
                v2.add(rs2.getString("Fines"));

//                v2.add(rs2.getString("SUM(Meal)"));
//                v2.add(rs2.getString("SUM(Rental)"));
//                v2.add(rs2.getString("SUM(OtherDeduc)"));
//                v2.add(rs2.getString("SUM(LessShift)"));
//                v2.add(rs2.getString("SUM(DeathDonation)"));
//                v2.add(rs2.getString("SUM(Insuarance)"));
//                v2.add(rs2.getString("SUM(PaidSalary10th)"));
                dtm2.addRow(v2);

                txt_welfare.setText(rs2.getString("Welfare"));

//                txt_fine.setText(rs2.getString("Fines"));
//                txt_rental.setText(rs2.getString(""));
//                txt_lessShift.setText(rs2.getString(""));
//                txt_pettycash.setText(rs2.getString(""));
//                txt_death.setText(rs2.getString(""));
//                txt_10th.setText(rs2.getString(""));
//                txt_insua.setText(rs2.getString(""));
                txt_lessShift_Days.setText(rs2.getString("LessShiftDays"));

                lbl_saved_deduc_EPFNO.setText(rs2.getString("EPFno"));
                ExistingDeducEPFno = rs2.getString("EPFno");

            }

            Statement st3 = DbConnection.getconnection().createStatement();
            ResultSet rs3 = st3.executeQuery("select SUM(Amount) from salary_advance_1 where EPFno='" + txt_empid.getText() + "'    and Status = 'on-going' ");
            while (rs3.next()) {

                txt_adva01.setText(rs3.getString("SUM(Amount)"));

            }

            Statement st4 = DbConnection.getconnection().createStatement();
            ResultSet rs4 = st4.executeQuery("select SUM(Amount) from salary_advance_2 where EPFno='" + txt_empid.getText() + "'   and Status = 'on-going'");
            while (rs4.next()) {

                txt_adva02.setText(rs4.getString("SUM(Amount)"));

            }

            Statement st5 = DbConnection.getconnection().createStatement();
            ResultSet rs5 = st5.executeQuery("select SUM(Rental) from salary_advance_festival where EPFno='" + txt_empid.getText() + "' and Status = 'on-going'");
            while (rs5.next()) {

                txt_festiv_adva.setText(rs5.getString("SUM(Rental)"));

            }

            Statement st6 = DbConnection.getconnection().createStatement();
            ResultSet rs6 = st6.executeQuery("select SUM(LoanAmount) from distress_loan where EPFno='" + txt_empid.getText() + "' and Status = 'on-going'");
            while (rs6.next()) {

                txt_loanRent.setText(rs6.getString("SUM(LoanAmount)"));

            }

            Statement st7 = DbConnection.getconnection().createStatement();
            ResultSet rs7 = st7.executeQuery("select SUM(LoanAmount) from distress_loan_02 where EPFno='" + txt_empid.getText() + "' and Status = 'on-going'");
            while (rs7.next()) {

                txt_loanRent2.setText(rs7.getString("SUM(LoanAmount)"));

            }

//            Statement st8 = DbConnection.getconnection().createStatement();
//            ResultSet rs8 = st8.executeQuery("select SUM(Rental) from shoes_issue where EPFno='" + txt_empid.getText() + "' and Status = 'on-going'");
//            while (rs8.next()) {
//
//                txt_shoe.setText(rs8.getString("SUM(Rental)"));
//
//            }
            Statement st9 = DbConnection.getconnection().createStatement();
            ResultSet rs9 = st9.executeQuery("select SUM(Rental) from uniform_issue where EPFno='" + txt_empid.getText() + "' and Status = 'on-going'");
            while (rs9.next()) {

                txt_uni.setText(rs9.getString("SUM(Rental)"));

            }
//            rs2.close();
//            st2.close();
//            rs3.close();
//            st3.close();
//            rs4.close();
//            st4.close();
//            rs5.close();
//            st5.close();
//            
//            rs6.close();
//            st6.close();
//            rs7.close();
//            st7.close();
//            rs8.close();
//            st8.close();
//            rs9.close();
//            st9.close();
//            
        } catch (Exception e) {
            e.printStackTrace();
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete_row;
    private javax.swing.JButton btn_print2;
    private javax.swing.JButton btn_print3;
    private javax.swing.JButton btn_print4;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_save1;
    private javax.swing.JComboBox cmb_defLocation;
    private javax.swing.JComboBox cmb_month;
    private javax.swing.JComboBox cmb_year;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lbl_no_ofSunday;
    private javax.swing.JLabel lbl_saved_deduc_EPFNO;
    private javax.swing.JLabel lbl_saved_earn_EPFNO;
    private javax.swing.JTextField txt_Sunday_noOfDays;
    private javax.swing.JTextField txt_Sunday_perDay;
    private javax.swing.JTextField txt_Sunday_total;
    private javax.swing.JTextField txt_adva01;
    private javax.swing.JTextField txt_adva02;
    private javax.swing.JTextField txt_atten;
    private javax.swing.JTextField txt_death;
    private javax.swing.JTextField txt_empLoc;
    private javax.swing.JTextField txt_empLocName;
    private javax.swing.JTextField txt_empNic;
    private javax.swing.JTextField txt_empNic3;
    private javax.swing.JTextField txt_empid;
    private javax.swing.JTextField txt_festiv_adva;
    private javax.swing.JTextField txt_fines;
    private javax.swing.JTextField txt_insua;
    private javax.swing.JTextField txt_lessShift;
    private javax.swing.JTextField txt_lessShift_Days;
    private javax.swing.JTextField txt_lessShift_RAte;
    private javax.swing.JTextField txt_loanRent;
    private javax.swing.JTextField txt_loanRent2;
    private javax.swing.JTextField txt_locName;
    private javax.swing.JTextField txt_machine;
    private javax.swing.JTextField txt_meal;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_other;
    private javax.swing.JTextField txt_pettycash;
    private javax.swing.JTextField txt_poyaDayAmt;
    private javax.swing.JTextField txt_poyaday;
    private javax.swing.JTextField txt_poyadayNos1;
    private javax.swing.JTextField txt_rank;
    private javax.swing.JTextField txt_rental;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_special;
    private javax.swing.JTextField txt_uni;
    private javax.swing.JTextField txt_welfare;
    // End of variables declaration//GEN-END:variables

    private void empty_text_fields() {

        if (txt_poyaDayAmt.getText().isEmpty()) {
            txt_poyaDayAmt.setText("0");
        }
        if (txt_poyadayNos1.getText().isEmpty()) {
            txt_poyadayNos1.setText("0");
        }

        if (txt_Sunday_noOfDays.getText().isEmpty()) {
            txt_Sunday_noOfDays.setText("0");
            lbl_no_ofSunday.setText("0");
        }

        if (txt_Sunday_perDay.getText().isEmpty()) {
            txt_Sunday_perDay.setText("0.00");
        }

        if (txt_Sunday_total.getText().isEmpty()) {
            txt_Sunday_total.setText("0.00");
        }

        if (txt_poyaday.getText().isEmpty()) {
            txt_poyaday.setText("0.00");
        }

        if (txt_machine.getText().isEmpty()) {
            txt_machine.setText("0.00");
        }

        if (txt_other.getText().isEmpty()) {
            txt_other.setText("0.00");
        }

        if (txt_welfare.getText().isEmpty()) {
            txt_welfare.setText("0.00");
        }

        if (txt_meal.getText().isEmpty()) {
            txt_meal.setText("0.00");
        }

//        if (txt_fine.getText().isEmpty()) {
//            txt_fine.setText("0.00");
//        }
        if (txt_rental.getText().isEmpty()) {
            txt_rental.setText("0.00");
        }

        if (txt_lessShift.getText().isEmpty()) {
            txt_lessShift.setText("0.00");
        }
        if (txt_lessShift_RAte.getText().isEmpty()) {
            txt_lessShift.setText("0");
        }
        if (txt_lessShift_Days.getText().isEmpty()) {
            txt_lessShift_Days.setText("0");
        }
        if (txt_pettycash.getText().isEmpty()) {
            txt_pettycash.setText("0.00");
        }

        if (txt_death.getText().isEmpty()) {
            txt_death.setText("0.00");
        }

        if (txt_fines.getText().isEmpty()) {
            txt_fines.setText("0.00");
        }

        if (txt_insua.getText().isEmpty()) {
            txt_insua.setText("0.00");
        }

    }

}
