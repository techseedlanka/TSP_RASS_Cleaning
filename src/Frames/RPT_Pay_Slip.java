/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

public class RPT_Pay_Slip extends javax.swing.JFrame {

    /**
     * Creates new form RPT_Pay_Slip
     */
    public RPT_Pay_Slip() {
        initComponents();
        auto_completer();
        TitleBar();
        get_Location_Details();
    }

    private void get_Location_Details() {
        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * from location_reg order by LocName");
            while (rs.next()) {

                Object name = rs.getString("LocName");
                //Object code = rs.getString("LocCode");

                //cmb_defLocation.addItem(code);
                cmb_defLocation.addItem(name);
            }

            AutoCompleteDecorator.decorate(cmb_defLocation);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void TitleBar() {

        try {
            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from company_reg where isDefault=1 ");
            while (rs.next()) {
                String ComName = rs.getString("ComName");
                this.setTitle("TechSeed Payroll" + "    -    " + ComName);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        this.setResizable(false);
        ImageIcon img = new ImageIcon("Images\\techseed.png");
        this.setIconImage(img.getImage());

    }

    private void auto_completer() {

        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from employee_reg where IsResigned=0 ");

            TextAutoCompleter ta = new TextAutoCompleter(txt_search);

            while (rs.next()) {
                String code = rs.getString("EmployeeNo");
                // String nic = rs.getString("NIC");
                String NameWithInitials = rs.getString("NameWithInitials");

                ta.addItem(code);
                ta.addItem(NameWithInitials);
                //ta.addItem(nic);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        cmb_month = new javax.swing.JComboBox();
        cmb_year = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JSeparator();
        txt_search = new javax.swing.JTextField();
        txt_empid = new javax.swing.JTextField();
        txt_name = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_rank = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cmb_loc_type = new javax.swing.JComboBox();
        lbl_locType = new javax.swing.JLabel();
        cmb_defLocation = new javax.swing.JComboBox();
        txt_locCode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cb_withoutEPF = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText("Pay Slip ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 140, 40));
        getContentPane().add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 380, 10));

        cmb_month.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        getContentPane().add(cmb_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 100, -1));

        cmb_year.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        cmb_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022" }));
        cmb_year.setSelectedIndex(7);
        cmb_year.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_yearPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 70, -1));

        jLabel18.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel18.setText("Salary Month / Year :-");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 20));

        jButton3.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fine Print.png"))); // NOI18N
        jButton3.setText("View All Pay Slips");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 360, -1));
        getContentPane().add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 380, 10));

        txt_search.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchFocusGained(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchKeyPressed(evt);
            }
        });
        getContentPane().add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 220, 30));

        txt_empid.setEditable(false);
        txt_empid.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        getContentPane().add(txt_empid, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, 100, 21));

        txt_name.setEditable(false);
        txt_name.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        getContentPane().add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, 260, 21));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel6.setText("Employee Search :-");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, 30));

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel7.setText("Name :-");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, 20));

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel9.setText("Rank :-");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, -1, 20));

        txt_rank.setEditable(false);
        txt_rank.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        getContentPane().add(txt_rank, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 90, 21));

        jButton4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fine Print.png"))); // NOI18N
        jButton4.setText("View Employee's Pay Slip");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 300, -1));

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel8.setText("EPF No.  :-");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, -1, 20));

        cmb_loc_type.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        cmb_loc_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ground & Admin Staff", "Director Staff" }));
        getContentPane().add(cmb_loc_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 180, -1));

        lbl_locType.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        getContentPane().add(lbl_locType, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 100, 20));

        cmb_defLocation.setEditable(true);
        cmb_defLocation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_defLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=Location=" }));
        cmb_defLocation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmb_defLocationFocusGained(evt);
            }
        });
        cmb_defLocation.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_defLocationPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_defLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 310, -1));

        txt_locCode.setEditable(false);
        txt_locCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_locCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusLost(evt);
            }
        });
        getContentPane().add(txt_locCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 50, 23));

        jLabel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Employee Wise Pay Slip", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 0, 12))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 370, 190));

        jComboBox1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "with R-List", "without R-List", "R-List Only" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 180, 25));
        getContentPane().add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 380, 10));

        jLabel11.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Salary Status : ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 100, 20));

        jLabel12.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Employee Type : ");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 100, 20));

        cb_withoutEPF.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cb_withoutEPF.setText("Without 3% & 12%");
        getContentPane().add(cb_withoutEPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 160, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_yearPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_yearPopupMenuWillBecomeInvisible
        // set_date_range();
    }//GEN-LAST:event_cmb_yearPopupMenuWillBecomeInvisible

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (cmb_loc_type.getSelectedIndex() == 0) {

            try {

                Connection conn = (Connection) DbConnection.getconnection();

                JasperDesign jd = null;
                String sql = null;
                if (jComboBox1.getSelectedIndex() == 0) {
                    //with r list
                    sql = "SELECT * FROM salary_final_site_employees where Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "' and Loc='" + txt_locCode.getText() + "' and SalaryType='FINAL'";

                } else if (jComboBox1.getSelectedIndex() == 1) {
                    //without r list
                    sql = "SELECT * FROM salary_final_site_employees where Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "' and Loc='" + txt_locCode.getText() + "' and Status='NEW' and SalaryType='FINAL'";

                } else {
                    // r list only
                    sql = "SELECT * FROM salary_final_site_employees where Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "' and Loc='" + txt_locCode.getText() + "' and  Status='RList' and SalaryType='FINAL'";

                }

//                String sql = "SELECT * FROM salary_final_site_employees where Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "' and Loc='" + txt_locCode.getText() + "'";
                String path = "";
                if (lbl_locType.getText().equals("Type01") | lbl_locType.getText().equals("Type02")) {

                    if (cb_withoutEPF.isSelected()) {
                        path = "Reports\\PaySlip_WithoutEPF.jrxml";
                    } else {
                        path = "Reports\\PaySlip.jrxml";
                    }

                } else {
                    if (cb_withoutEPF.isSelected()) {
                        path = "Reports\\PaySlip_Type03and04_WithoutEPF.jrxml";
                    } else {
                        path = "Reports\\PaySlip_Type03and04.jrxml";
                    }

                }
                jd = JRXmlLoader.load(path);
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql);
                System.out.println(sql);
                jd.setQuery(newQuery);

                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else if (cmb_loc_type.getSelectedIndex() == 1) {

//            try {
//
//                Connection conn = (Connection) DbConnection.getconnection();
//
//                JasperDesign jd = JRXmlLoader.load("Reports\\PaySlip.jrxml");
//                String sql = "SELECT * FROM salary_final_site_employees where Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "' and LocationType='Bank'";
//                JRDesignQuery newQuery = new JRDesignQuery();
//                newQuery.setText(sql);
//                jd.setQuery(newQuery);
//
//                JasperReport jr = JasperCompileManager.compileReport(jd);
//                JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                JasperViewer.viewReport(jp, false);
//
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
        } else if (cmb_loc_type.getSelectedIndex() == 2) {

//            try {
//
//                Connection conn = (Connection) DbConnection.getconnection();
//
//                JasperDesign jd = JRXmlLoader.load("Reports\\PaySlip.jrxml");
//                String sql = "SELECT * FROM salary_final where Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "' and LocationType='Other'";
//                JRDesignQuery newQuery = new JRDesignQuery();
//                newQuery.setText(sql);
//                jd.setQuery(newQuery);
//
//                JasperReport jr = JasperCompileManager.compileReport(jd);
//                JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                JasperViewer.viewReport(jp, false);
//
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
        } else if (cmb_loc_type.getSelectedIndex() == 3) {

//            try {
//
//                Connection conn = (Connection) DbConnection.getconnection();
//
//                JasperDesign jd = JRXmlLoader.load("Reports\\PaySlip.jrxml");
//                String sql = "SELECT * FROM salary_final_admin_staff where Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "' ";
//                JRDesignQuery newQuery = new JRDesignQuery();
//                newQuery.setText(sql);
//                jd.setQuery(newQuery);
//
//                JasperReport jr = JasperCompileManager.compileReport(jd);
//                JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                JasperViewer.viewReport(jp, false);
//
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
        } else if (cmb_loc_type.getSelectedIndex() == 4) {

//            try {
//
//                Connection conn = (Connection) DbConnection.getconnection();
//
//                JasperDesign jd = JRXmlLoader.load("Reports\\PaySlip_SIKURA.jrxml");
//                String sql = "SELECT * FROM salary_final_sikura_staff where Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "' ";
//                JRDesignQuery newQuery = new JRDesignQuery();
//                newQuery.setText(sql);
//                jd.setQuery(newQuery);
//
//                JasperReport jr = JasperCompileManager.compileReport(jd);
//                JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                JasperViewer.viewReport(jp, false);
//
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
        }
        // JOptionPane.showMessageDialog(rootPane, "<html>Default Memory Allocation Running Low<br>Please check the Report Design & RAM performance</html>");


    }//GEN-LAST:event_jButton3ActionPerformed

    private void txt_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusGained

    }//GEN-LAST:event_txt_searchFocusGained

    private void txt_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("select * from employee_reg");
                while (rs.next()) {
                    String code = rs.getString("EmployeeNo");
//                    String nic = rs.getString("NIC");
                    String name = rs.getString("NameWithInitials");

                    String rank = rs.getString("Designation");
                    String rankCat = rs.getString("RankCategory");

                    byte[] imagedata = rs.getBytes("EMPImage");

                    if (txt_search.getText().equals(code) || txt_search.getText().equals(name)) {

                        if (imagedata == null) {

                            // format = new ImageIcon("imagedata");
                        } else {

                            // format = new ImageIcon(imagedata);
                        }

                        txt_empid.setText(code);
                        txt_name.setText(name);
                        //txt_empNic.setText(nic);

                        txt_rank.setText(rank);
                        // lbl_rankCat.setText(rankCat);

                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_searchKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (cmb_loc_type.getSelectedIndex() == 3) {

            try {

                Connection conn = (Connection) DbConnection.getconnection();

                JasperDesign jd = JRXmlLoader.load("Reports\\PaySlip.jrxml");
                String sql = "SELECT * FROM salary_final_site_employees where EPFno='" + txt_empid.getText() + "' and Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "'";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql);
                jd.setQuery(newQuery);

                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (cmb_loc_type.getSelectedIndex() == 4) {

            try {

                Connection conn = (Connection) DbConnection.getconnection();

                JasperDesign jd = JRXmlLoader.load("Reports\\PaySlip_SIKURA.jrxml");
                String sql = "SELECT * FROM salary_final_sikura_staff where EPFno='" + txt_empid.getText() + "' and Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "'";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql);
                jd.setQuery(newQuery);

                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            try {

                Connection conn = (Connection) DbConnection.getconnection();

                JasperDesign jd = null;
                if (lbl_locType.getText().equals("Type01") | lbl_locType.getText().equals("Type02")) {
                    jd = JRXmlLoader.load("Reports\\PaySlip.jrxml");
                } else {
                    jd = JRXmlLoader.load("Reports\\PaySlip_Type03and04.jrxml");
                }

                String sql = "SELECT * FROM salary_final_site_employees where EMPno='" + txt_empid.getText() + "' and Month='" + cmb_month.getSelectedItem().toString() + "' and Year ='" + cmb_year.getSelectedItem().toString() + "'";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql);
                jd.setQuery(newQuery);

                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        //   JOptionPane.showMessageDialog(rootPane, "<html>Default Memory Allocation Running Low<br>Please check the Report Design & RAM performance</html>");

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cmb_defLocationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_defLocationFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_defLocationFocusGained

    private void cmb_defLocationPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_defLocationPopupMenuWillBecomeInvisible

        if (cmb_defLocation.getSelectedItem().equals("=Location=")) {

            txt_locCode.setText(" Please Select a Location ");
            txt_locCode.setForeground(Color.RED);

        } else {
            txt_locCode.setForeground(Color.black);

            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("SELECT * from location_reg where LocCode= '" + cmb_defLocation.getSelectedItem().toString() + "' OR LocName= '" + cmb_defLocation.getSelectedItem().toString() + "' ");
                while (rs.next()) {

                    String code = rs.getString("LocCode");
                    String name = rs.getString("LocName");
                    String Loc_Type = rs.getString("Tel3");
                    lbl_locType.setText(Loc_Type);
                    cmb_defLocation.setSelectedItem(name);
                    txt_locCode.setText(code);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_cmb_defLocationPopupMenuWillBecomeInvisible

    private void txt_locCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusGained
        // get_carder_and_enterd_shifts_total();//
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locCodeFocusGained

    private void txt_locCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locCodeFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RPT_Pay_Slip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RPT_Pay_Slip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RPT_Pay_Slip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RPT_Pay_Slip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RPT_Pay_Slip().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cb_withoutEPF;
    private javax.swing.JComboBox cmb_defLocation;
    private javax.swing.JComboBox cmb_loc_type;
    private javax.swing.JComboBox cmb_month;
    private javax.swing.JComboBox cmb_year;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lbl_locType;
    private javax.swing.JTextField txt_empid;
    private javax.swing.JTextField txt_locCode;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_rank;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables
}
