/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import java.awt.Color;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 * TECHSEED SOLUTIONS
 *
 * @author Sapumal Bandara @ TechSeed Solutions
 */
public class Attn_Rank_Changing_UI extends javax.swing.JFrame {

    /**
     * Creates new form Attn_Rank_Changing_UI
     */
    public Attn_Rank_Changing_UI() {
        initComponents();

        get_Location_Details();
        TitleBar();
    }

    private void TitleBar() {
        this.setTitle("Employee Attendance Rank Change");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("techseed.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void get_Location_Details() {
        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * from location_reg order by LocName");
            while (rs.next()) {

                Object name = rs.getString("LocName");
                //Object code = rs.getString("LocCode");

                //cmb_defLocation.addItem(code);
                cmb_defLocation.addItem(name);
            }

            AutoCompleteDecorator.decorate(cmb_defLocation);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void get_Ranks() {
        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * from salary_rates  where LocCode='" + txt_locCode.getText() + "'");
            while (rs.next()) {

                Object name = rs.getString("RankCode");
                // String code = rs.getString("RankCode");

                //cmb_defLocation.addItem(code);
                cmb_rank.addItem(name);
            }

            //AutoCompleteDecorator.decorate(cmb_defLocation);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_main = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_rates = new javax.swing.JTable();
        cmb_defLocation = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txt_locCode = new javax.swing.JTextField();
        cmb_rank = new javax.swing.JComboBox();
        txt_rankCode = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_sum = new javax.swing.JTable();
        cmb_action = new javax.swing.JComboBox<>();
        txt_empName = new javax.swing.JTextField();
        txt_dateORline = new javax.swing.JTextField();
        txt_empCode = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cmb_month = new javax.swing.JComboBox();
        cmb_year = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText("Employee Rank Change ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 240, 40));
        getContentPane().add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 1180, 10));

        table_main.setAutoCreateRowSorter(true);
        table_main.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMPno", "Employee Name", "Rank", "Date", "D", "N", "Half", "OT", "OT hr", "Line"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_main);
        if (table_main.getColumnModel().getColumnCount() > 0) {
            table_main.getColumnModel().getColumn(0).setPreferredWidth(60);
            table_main.getColumnModel().getColumn(1).setPreferredWidth(120);
            table_main.getColumnModel().getColumn(2).setPreferredWidth(40);
            table_main.getColumnModel().getColumn(3).setPreferredWidth(80);
            table_main.getColumnModel().getColumn(4).setPreferredWidth(30);
            table_main.getColumnModel().getColumn(5).setPreferredWidth(30);
            table_main.getColumnModel().getColumn(6).setPreferredWidth(30);
            table_main.getColumnModel().getColumn(7).setPreferredWidth(30);
            table_main.getColumnModel().getColumn(8).setPreferredWidth(40);
            table_main.getColumnModel().getColumn(9).setPreferredWidth(40);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 560, 370));

        table_rates.setAutoCreateRowSorter(true);
        table_rates.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Day", "Night", "OT "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_rates);
        if (table_rates.getColumnModel().getColumnCount() > 0) {
            table_rates.getColumnModel().getColumn(0).setPreferredWidth(60);
            table_rates.getColumnModel().getColumn(1).setPreferredWidth(120);
            table_rates.getColumnModel().getColumn(2).setPreferredWidth(60);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 300, 230, 70));

        cmb_defLocation.setEditable(true);
        cmb_defLocation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_defLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=Location=" }));
        cmb_defLocation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmb_defLocationFocusGained(evt);
            }
        });
        cmb_defLocation.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
                cmb_defLocationPopupMenuCanceled(evt);
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_defLocationPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_defLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 360, -1));

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel9.setText("Location :-");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 40));

        txt_locCode.setEditable(false);
        txt_locCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_locCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusLost(evt);
            }
        });
        getContentPane().add(txt_locCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 70, 23));

        cmb_rank.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_rank.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmb_rankFocusGained(evt);
            }
        });
        cmb_rank.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_rankPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_rank, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 260, 110, -1));

        txt_rankCode.setEditable(false);
        txt_rankCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_rankCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_rankCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_rankCodeFocusLost(evt);
            }
        });
        getContentPane().add(txt_rankCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 260, 70, 23));
        getContentPane().add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1180, 10));

        table_sum.setAutoCreateRowSorter(true);
        table_sum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMPno", "Employee Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table_sum);
        if (table_sum.getColumnModel().getColumnCount() > 0) {
            table_sum.getColumnModel().getColumn(0).setPreferredWidth(60);
            table_sum.getColumnModel().getColumn(1).setPreferredWidth(120);
        }

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 240, 370));

        cmb_action.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        cmb_action.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "whole Month", "One Date", "Selected Shift" }));
        cmb_action.setToolTipText("Changed Rate for...");
        cmb_action.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_actionPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_action, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 190, 180, 30));

        txt_empName.setEditable(false);
        txt_empName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_empName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_empNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_empNameFocusLost(evt);
            }
        });
        getContentPane().add(txt_empName, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 130, 240, 23));

        txt_dateORline.setEditable(false);
        txt_dateORline.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_dateORline.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_dateORlineFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_dateORlineFocusLost(evt);
            }
        });
        getContentPane().add(txt_dateORline, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 220, 180, 23));

        txt_empCode.setEditable(false);
        txt_empCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_empCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_empCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_empCodeFocusLost(evt);
            }
        });
        getContentPane().add(txt_empCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 160, 60, 23));

        jLabel11.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel11.setText("Rank :-");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 250, -1, 40));

        cmb_month.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmb_month.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 204)));
        cmb_month.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_monthPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, -1, -1));

        cmb_year.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        cmb_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2019", "2020", "2021", "2022" }));
        cmb_year.setSelectedIndex(2);
        cmb_year.setSelectedItem("2017");
        cmb_year.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 204)));
        cmb_year.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_yearPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 60, -1, -1));

        jButton1.setBackground(new java.awt.Color(153, 204, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RightArrow.png"))); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 100, 35, 360));

        jButton2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search.png"))); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 50, 130, 40));

        jButton3.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 50, 120, -1));

        jButton4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save as.png"))); // NOI18N
        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 400, 230, 60));

        jLabel13.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel13.setText("Action :-");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 190, -1, 30));

        jButton5.setBackground(new java.awt.Color(153, 204, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RightArrow.png"))); // NOI18N
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 150, 35, 270));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_defLocationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_defLocationFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_defLocationFocusGained

    private void cmb_defLocationPopupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_defLocationPopupMenuCanceled
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_defLocationPopupMenuCanceled

    private void cmb_defLocationPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_defLocationPopupMenuWillBecomeInvisible

        if (cmb_defLocation.getSelectedItem().equals("=Location=")) {

            txt_locCode.setText("NA");
            txt_locCode.setForeground(Color.red);

        } else {
            txt_locCode.setForeground(Color.black);
            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("SELECT * from location_reg where LocCode= '" + cmb_defLocation.getSelectedItem().toString() + "' OR LocName= '" + cmb_defLocation.getSelectedItem().toString() + "' ");
                while (rs.next()) {

                    String code = rs.getString("LocCode");
                    String name = rs.getString("LocName");

                    cmb_defLocation.setSelectedItem(name);
                    txt_locCode.setText(code);
                }

                cmb_defLocation.setEditable(false);
                cmb_defLocation.setEnabled(false);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

        String s = txt_locCode.getText();

        if (s.equals("** Please Select a Location ") | s.isEmpty()) {

        } else {

        }
    }//GEN-LAST:event_cmb_defLocationPopupMenuWillBecomeInvisible

    private void txt_locCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusGained
        // get_carder_and_enterd_shifts_total();//
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locCodeFocusGained

    private void txt_locCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locCodeFocusLost

    private void cmb_rankFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_rankFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_rankFocusGained

    private void cmb_rankPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_rankPopupMenuWillBecomeInvisible

        if (cmb_rank.getSelectedItem() == null) {
        } else {
            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("SELECT * from rank where RankCode='" + cmb_rank.getSelectedItem().toString() + "'");
                while (rs.next()) {

                    String code = rs.getString("RankName");
                    txt_rankCode.setText(code);
                }

                Statement st1 = DbConnection.getconnection().createStatement();
                ResultSet rs1 = st1.executeQuery("SELECT * from salary_rates where RankCode='" + cmb_rank.getSelectedItem().toString() + "' and LocCode='" + txt_locCode.getText() + "'");
                DefaultTableModel dtm = (DefaultTableModel) table_rates.getModel();
                dtm.setRowCount(0);
                while (rs1.next()) {

                    Vector v = new Vector();
                    v.add(rs1.getString("DayRate"));
                    v.add(rs1.getString("NightRate"));
                    v.add(rs1.getString("OTRate"));
                    dtm.addRow(v);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_rankPopupMenuWillBecomeInvisible

    private void txt_rankCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_rankCodeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rankCodeFocusGained

    private void txt_rankCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_rankCodeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rankCodeFocusLost

    private void txt_empNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_empNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_empNameFocusGained

    private void txt_empNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_empNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_empNameFocusLost

    private void txt_dateORlineFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dateORlineFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dateORlineFocusGained

    private void txt_dateORlineFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dateORlineFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dateORlineFocusLost

    private void txt_empCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_empCodeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_empCodeFocusGained

    private void txt_empCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_empCodeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_empCodeFocusLost

    private void cmb_monthPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_monthPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_cmb_monthPopupMenuWillBecomeInvisible

    private void cmb_yearPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_yearPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_cmb_yearPopupMenuWillBecomeInvisible

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Thread hilo = new Thread(new Runnable() {

            @Override
            public void run() {
                if (cmb_defLocation.getSelectedIndex() == 0) {

                } else {

                    try {
                        jButton2.setEnabled(false);
                        String month = cmb_month.getSelectedItem().toString();
                        String year = cmb_year.getSelectedItem().toString();
                        Connection con = DbConnection.getconnection();
                        PreparedStatement pst = con.prepareStatement("select * from emp_atten_main where Location='" + txt_locCode.getText() + "' and Month='" + month + "' and Year='" + year + "' group by EPFno");
                        ResultSet rs = pst.executeQuery();
                        DefaultTableModel dtm = (DefaultTableModel) table_sum.getModel();
                        dtm.setRowCount(0);

                        while (rs.next()) {

                            String emp = rs.getString("EPFno");

                            PreparedStatement pst1 = con.prepareStatement("select * from employee_reg where EmployeeNo='" + emp + "'");
                            ResultSet rs1 = pst1.executeQuery();
                            while (rs1.next()) {

                                String name = rs1.getString("NameWithInitials");

                                Vector v = new Vector();
                                v.add(emp);
                                v.add(name);
                                dtm.addRow(v);

                            }

                        }
                        get_Ranks();
                        jButton2.setEnabled(true);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            }
        });
        hilo.start();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (table_main.getSelectedRowCount() < 1) {

        } else {
            try {
                int row = table_main.getSelectedRow();
                String emp = table_main.getValueAt(row, 0).toString();
                String name = table_main.getValueAt(row, 1).toString();
                String date = table_main.getValueAt(row, 3).toString();
                String line = table_main.getValueAt(row, 9).toString();

                String month = cmb_month.getSelectedItem().toString();
                String year = cmb_year.getSelectedItem().toString();

                txt_empCode.setText(emp);
                txt_empName.setText(name);

                if (cmb_action.getSelectedIndex() == 1) {
                    txt_dateORline.setText(month + " / " + year);
                } else if (cmb_action.getSelectedIndex() == 2) {
                    txt_dateORline.setText(date);
                } else if (cmb_action.getSelectedIndex() == 3) {
                    txt_dateORline.setText(line);
                } else {

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (table_sum.getSelectedRowCount() < 1) {

        } else {
            try {

                int row = table_sum.getSelectedRow();
                String emp = table_sum.getValueAt(row, 0).toString();
                String name = table_sum.getValueAt(row, 1).toString();

                String month = cmb_month.getSelectedItem().toString();
                String year = cmb_year.getSelectedItem().toString();
                Connection con = DbConnection.getconnection();
                PreparedStatement pst1 = con.prepareStatement("select * from emp_atten_main where Month='" + month + "' and Year='" + year + "' and EPFno='" + emp + "'");
                ResultSet rs1 = pst1.executeQuery();
                DefaultTableModel dtm = (DefaultTableModel) table_main.getModel();
                dtm.setRowCount(0);

                while (rs1.next()) {

                    Vector v = new Vector();
                    v.add(emp);
                    v.add(name);
                    v.add(rs1.getString("EffectiveRank"));
                    v.add(rs1.getString("Date"));
                    v.add(rs1.getString("DayShift"));
                    v.add(rs1.getString("NightShift"));
                    v.add(rs1.getString("HalfDayShift"));
                    v.add(rs1.getString("OTShift"));
                    v.add(rs1.getString("OTHours"));
                    v.add(rs1.getString("Line"));
                    //v.add(rs1.getString(""));

                    dtm.addRow(v);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void cmb_actionPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_actionPopupMenuWillBecomeInvisible
        if (table_main.getSelectedRowCount() < 1) {

        } else {

            int row = table_main.getSelectedRow();

            String date = table_main.getValueAt(row, 3).toString();
            String line = table_main.getValueAt(row, 9).toString();

            String month = cmb_month.getSelectedItem().toString();
            String year = cmb_year.getSelectedItem().toString();

            if (cmb_action.getSelectedIndex() == 1) {
                txt_dateORline.setText(month + " / " + year);
            } else if (cmb_action.getSelectedIndex() == 2) {
                txt_dateORline.setText(date);
            } else if (cmb_action.getSelectedIndex() == 3) {
                txt_dateORline.setText(line);
            } else {

            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_actionPopupMenuWillBecomeInvisible

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {

            if (txt_empCode.getText().isEmpty() | cmb_action.getSelectedIndex() == 0) {

            } else {
                String month = cmb_month.getSelectedItem().toString();
                String year = cmb_year.getSelectedItem().toString();

                String sql = null;
                if (cmb_action.getSelectedIndex() == 1) {
                    sql = "update emp_atten_main set EffectiveRank = '" + cmb_rank.getSelectedItem().toString() + "' where Month='" + month + "' and Year='" + year + "' and Location='" + txt_locCode.getText() + "' and EPFno='" + txt_empCode.getText() + "'";
                } else if (cmb_action.getSelectedIndex() == 2) {
                    sql = "update emp_atten_main set EffectiveRank = '" + cmb_rank.getSelectedItem().toString() + "' where Date='" + txt_dateORline.getText() + "' and Location='" + txt_locCode.getText() + "' and EPFno='" + txt_empCode.getText() + "'";
                } else if (cmb_action.getSelectedIndex() == 3) {
                    sql = "update emp_atten_main set EffectiveRank = '" + cmb_rank.getSelectedItem().toString() + "' where Line='" + txt_dateORline.getText() + "' and Location='" + txt_locCode.getText() + "' and EPFno='" + txt_empCode.getText() + "'";
                } else {

                }

                Connection con = DbConnection.getconnection();
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                jButton5ActionPerformed(evt);

                JOptionPane.showMessageDialog(rootPane, "Selected Records Updated...!");
                txt_dateORline.setText("");
                txt_empCode.setText("");
                txt_empName.setText("");
                txt_rankCode.setText("");

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        cmb_action.setEnabled(true);
        cmb_action.setEditable(true);

        DefaultTableModel dtm = (DefaultTableModel) table_main.getModel();
        dtm.setRowCount(0);
        DefaultTableModel dtm1 = (DefaultTableModel) table_rates.getModel();
        dtm1.setRowCount(0);
        DefaultTableModel dtm2 = (DefaultTableModel) table_sum.getModel();
        dtm2.setRowCount(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//*************************Developed By TechSeed Solutions*************************************************
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Attn_Rank_Changing_UI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Attn_Rank_Changing_UI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Attn_Rank_Changing_UI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attn_Rank_Changing_UI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Attn_Rank_Changing_UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_action;
    private javax.swing.JComboBox cmb_defLocation;
    private javax.swing.JComboBox cmb_month;
    private javax.swing.JComboBox cmb_rank;
    private javax.swing.JComboBox cmb_year;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable table_main;
    private javax.swing.JTable table_rates;
    private javax.swing.JTable table_sum;
    private javax.swing.JTextField txt_dateORline;
    private javax.swing.JTextField txt_empCode;
    private javax.swing.JTextField txt_empName;
    private javax.swing.JTextField txt_locCode;
    private javax.swing.JTextField txt_rankCode;
    // End of variables declaration//GEN-END:variables

}
