/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Sapumal Bandara @ TechSeed Solutions
 */
public class RPT_EPF_Deduction_List extends javax.swing.JFrame {

    /**
     * Creates new form RPT_EPF_Deduction_List
     */
    public RPT_EPF_Deduction_List() {
        initComponents();
        TitleBar();
    }

    private void TitleBar() {

        try {
            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from company_reg where isDefault=1 ");
            while (rs.next()) {
                String ComName = rs.getString("ComName");
                this.setTitle("TechSeed Payroll" + "    -    " + ComName);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        this.setResizable(false);
        ImageIcon img = new ImageIcon("Images\\techseed.png");
        this.setIconImage(img.getImage());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmb_month = new javax.swing.JComboBox();
        cmb_year = new javax.swing.JComboBox();
        cmb_empCategory = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel36 = new javax.swing.JLabel();
        cmb_Company = new javax.swing.JComboBox();
        cmb_empType = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmb_month.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmb_month.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_monthPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 110, -1));

        cmb_year.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        cmb_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022" }));
        cmb_year.setSelectedIndex(7);
        cmb_year.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_yearPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, -1, -1));

        cmb_empCategory.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_empCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Guards", "Admin Staff", "Directors" }));
        cmb_empCategory.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_empCategoryPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cmb_empCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_empCategoryActionPerformed(evt);
            }
        });
        getContentPane().add(cmb_empCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 180, -1));

        jButton1.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fine Print.png"))); // NOI18N
        jButton1.setText("Print Preview");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 200, 40));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText("EPF/ETF Deduction List");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 200, 40));

        jLabel34.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel34.setText("   Employee Category  :-");
        getContentPane().add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, 20));

        jLabel35.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel35.setText(" Salary Month / Year  :-");
        getContentPane().add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 400, 10));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 400, 10));

        jLabel36.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel36.setText("   Company  :-");
        getContentPane().add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, -1, 20));

        cmb_Company.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_Company.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Target", "Express", "Diamond" }));
        cmb_Company.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_CompanyPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cmb_Company.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_CompanyActionPerformed(evt);
            }
        });
        getContentPane().add(cmb_Company, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 180, -1));

        cmb_empType.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_empType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "With R-List", "Witout R-List", "R-List Only" }));
        cmb_empType.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_empTypePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cmb_empType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_empTypeActionPerformed(evt);
            }
        });
        getContentPane().add(cmb_empType, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 180, -1));

        jLabel37.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel37.setText("Emp. Type  :-");
        getContentPane().add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, 20));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_monthPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_monthPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_monthPopupMenuWillBecomeInvisible

    private void cmb_yearPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_yearPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_cmb_yearPopupMenuWillBecomeInvisible

    private void cmb_empCategoryPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_empCategoryPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_empCategoryPopupMenuWillBecomeInvisible

    private void cmb_empCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_empCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_empCategoryActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String month = cmb_month.getSelectedItem().toString();
        String year = cmb_year.getSelectedItem().toString();
        String EmpCat = cmb_empCategory.getSelectedItem().toString();

        try {

            Connection conn = (Connection) DbConnection.getconnection();

            if (cmb_Company.getSelectedIndex() == 0) {

                if (cmb_empCategory.getSelectedIndex() == 0) {
                    //SSS Employee

                    JasperDesign jd = JRXmlLoader.load("Reports\\EPF_DeductionList.jrxml");
                    //String sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode join salary_advance_1 on salary_final_site_employees.EMPno= salary_advance_1.EPFno    where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "' AND `salary_advance_1`.`PayMonth`='" + cmb_month.getSelectedItem().toString() + "' AND `salary_advance_1`.`PayYear`='" + cmb_year.getSelectedItem().toString() + "' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'T%'Order by Loc";
                    String sql = "";
                    if (cmb_empType.getSelectedIndex() == 0) {
                        sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode  where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "'  AND salary_final_site_employees.SalaryType='FINAL' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'T%'Order by Loc";

                    } else if (cmb_empType.getSelectedIndex() == 1) {
                        sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode  where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "'  AND salary_final_site_employees.SalaryType='FINAL' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'T%' and salary_final_site_employees.Status='NEW' Order by Loc";

                    } else {
                        sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode  where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "'  AND salary_final_site_employees.SalaryType='FINAL' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'T%' and salary_final_site_employees.Status='RList'Order by Loc";

                    }

                    JRDesignQuery newQuery = new JRDesignQuery();
                    newQuery.setText(sql);
                    jd.setQuery(newQuery);

                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
                    JasperViewer.viewReport(jp, false);

                }
                if (cmb_empCategory.getSelectedIndex() == 1) {
                    //SIKURA

                }
                if (cmb_empCategory.getSelectedIndex() == 2) {
                    //admin Staff

                }

            } else if (cmb_Company.getSelectedIndex() == 1) {

                if (cmb_empCategory.getSelectedIndex() == 0) {
                    //Target Employee

                    JasperDesign jd = JRXmlLoader.load("Reports\\EPF_DeductionList.jrxml");

                    //  String sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode join salary_advance_1 on salary_final_site_employees.EMPno= salary_advance_1.EPFno    where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "' AND `salary_advance_1`.`PayMonth`='" + cmb_month.getSelectedItem().toString() + "' AND `salary_advance_1`.`PayYear`='" + cmb_year.getSelectedItem().toString() + "' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'E%'Order by Loc";
                    String sql = "";
                    if (cmb_empType.getSelectedIndex() == 0) {
                        sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "'  AND salary_final_site_employees.SalaryType='FINAL' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'E%'Order by Loc";

                    } else if (cmb_empType.getSelectedIndex() == 1) {
                        sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "'  AND salary_final_site_employees.SalaryType='FINAL' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'E%' and  salary_final_site_employees.Status ='NEW'Order by Loc";

                    } else {
                        sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "'  AND salary_final_site_employees.SalaryType='FINAL' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'E%' and  salary_final_site_employees.Status ='RList' Order by Loc";

                    }

                    JRDesignQuery newQuery = new JRDesignQuery();
                    newQuery.setText(sql);
                    jd.setQuery(newQuery);

                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
                    JasperViewer.viewReport(jp, false);

                }
                if (cmb_empCategory.getSelectedIndex() == 1) {

                }
                if (cmb_empCategory.getSelectedIndex() == 2) {
                    //admin Staff

                }
            } else {
                if (cmb_empCategory.getSelectedIndex() == 0) {
                    //Target Employee

                    JasperDesign jd = JRXmlLoader.load("Reports\\EPF_DeductionList.jrxml");

                    //  String sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode join salary_advance_1 on salary_final_site_employees.EMPno= salary_advance_1.EPFno    where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "' AND `salary_advance_1`.`PayMonth`='" + cmb_month.getSelectedItem().toString() + "' AND `salary_advance_1`.`PayYear`='" + cmb_year.getSelectedItem().toString() + "' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'E%'Order by Loc";
                    String sql = "";
                    if (cmb_empType.getSelectedIndex() == 0) {
                        sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "'  AND salary_final_site_employees.SalaryType='FINAL' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'D%'Order by Loc";

                    } else if (cmb_empType.getSelectedIndex() == 1) {
                        sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "'  AND salary_final_site_employees.SalaryType='FINAL' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'D%' and  salary_final_site_employees.Status ='NEW'Order by Loc";

                    } else {
                        sql = "select * from salary_final_site_employees join location_reg on salary_final_site_employees.Loc = location_reg.LocCode where salary_final_site_employees.Month='" + cmb_month.getSelectedItem().toString() + "' and salary_final_site_employees.Year ='" + cmb_year.getSelectedItem().toString() + "'  AND salary_final_site_employees.SalaryType='FINAL' AND EPF8 NOT IN ('0.00')  and salary_final_site_employees.Loc LIKE 'D%' and  salary_final_site_employees.Status ='RList' Order by Loc";

                    }

                    JRDesignQuery newQuery = new JRDesignQuery();
                    newQuery.setText(sql);
                    jd.setQuery(newQuery);

                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
                    JasperViewer.viewReport(jp, false);

                }
                if (cmb_empCategory.getSelectedIndex() == 1) {

                }
                if (cmb_empCategory.getSelectedIndex() == 2) {
                    //admin Staff

                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, e);

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmb_CompanyPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_CompanyPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_CompanyPopupMenuWillBecomeInvisible

    private void cmb_CompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_CompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_CompanyActionPerformed

    private void cmb_empTypePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_empTypePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_empTypePopupMenuWillBecomeInvisible

    private void cmb_empTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_empTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_empTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RPT_EPF_Deduction_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RPT_EPF_Deduction_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RPT_EPF_Deduction_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RPT_EPF_Deduction_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RPT_EPF_Deduction_List().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_Company;
    private javax.swing.JComboBox cmb_empCategory;
    private javax.swing.JComboBox cmb_empType;
    private javax.swing.JComboBox cmb_month;
    private javax.swing.JComboBox cmb_year;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
