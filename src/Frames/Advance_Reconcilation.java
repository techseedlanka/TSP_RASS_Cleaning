/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import java.awt.Color;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 * TECHSEED SOLUTIONS
 *
 * @author Sapumal Bandara @ TechSeed Solutions
 */
public class Advance_Reconcilation extends javax.swing.JFrame {

    /**
     * Creates new form advance_reconcilation
     */
    public Advance_Reconcilation() {
        initComponents();

        get_Location_Details();
        TitleBar();
        set_status();
    }

    private void get_saved_advance_details() {
        try {
            Connection con = DbConnection.getconnection();
            String sql = "select *  from salary_advance_1 where PayMonth='" + cmb_month.getSelectedItem().toString() + "' and PayYear ='" + cmb_year.getSelectedItem().toString() + "' and Location='" + txt_locCode.getText() + "'";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {
                String rank = rs.getString("Rank");

                Vector v = new Vector();
                v.add(txt_locCode.getText());
                v.add(rank);
                v.add(rs.getString("EPFno"));
                v.add(rs.getString("Name"));

                String Adv = rs.getString("Amount");
                System.out.println(Adv);
                if (Adv == null | Adv.equals("0.00")) {
                    v.add("0.00");
                } else {
                    v.add(Adv);
                }
                v.add(rs.getString("Note"));
                v.add(rs.getString("Status"));

                dtm.addRow(v);
                txt_doc_no.setText(rs.getString("ReferenceID"));

            }

        } catch (Exception e) {
            e.printStackTrace();

        }
    }

    private void set_status() {
        try {

            String[] theSeven = {"PAID", "UNPAID", "PENDING"};
            JComboBox combo1 = new JComboBox(theSeven);

            TableColumn col = jTable1.getColumnModel().getColumn(6);
            col.setCellEditor(new DefaultCellEditor(combo1));

            combo1.setSelectedIndex(0);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void TitleBar() {
        this.setTitle("Advance");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("techseed.png")));
    }

    private void get_Location_Details() {
        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * from location_reg order by LocName");
            while (rs.next()) {

                Object name = rs.getString("LocName");
                //Object code = rs.getString("LocCode");

                //cmb_defLocation.addItem(code);
                cmb_defLocation.addItem(name);
            }

            AutoCompleteDecorator.decorate(cmb_defLocation);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel9 = new javax.swing.JLabel();
        cmb_defLocation = new javax.swing.JComboBox();
        txt_locCode = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        cmb_month = new javax.swing.JComboBox();
        cmb_year = new javax.swing.JComboBox();
        jButton10 = new javax.swing.JButton();
        txt_doc_no = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jButton14 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        cb_pay = new javax.swing.JCheckBox();
        cb_unpay = new javax.swing.JCheckBox();
        jButton13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel9.setText("Location :-");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 40));

        cmb_defLocation.setEditable(true);
        cmb_defLocation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_defLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=Location=" }));
        cmb_defLocation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmb_defLocationFocusGained(evt);
            }
        });
        cmb_defLocation.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_defLocationPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_defLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 390, -1));

        txt_locCode.setEditable(false);
        txt_locCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_locCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusLost(evt);
            }
        });
        getContentPane().add(txt_locCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 90, 23));

        jLabel34.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel34.setText(" Month  :-");
        getContentPane().add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 20));

        cmb_month.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmb_month.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 204)));
        cmb_month.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_monthPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        cmb_year.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        cmb_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2019", "2020", "2021", "2022" }));
        cmb_year.setSelectedIndex(3);
        cmb_year.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 204)));
        cmb_year.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_yearPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, -1));

        jButton10.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Available Updates.png"))); // NOI18N
        jButton10.setText("Load Employees");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, 190, 50));

        txt_doc_no.setEditable(false);
        txt_doc_no.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_doc_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_doc_noFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_doc_noFocusLost(evt);
            }
        });
        getContentPane().add(txt_doc_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 90, 23));

        jLabel33.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel33.setText(" Doc. No  :-");
        getContentPane().add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 80, 70, 20));

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Unit", "Rank", "EMP. No.", "Name", "Advance", "PayType", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(250);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 760, 370));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText("Advances Reconciliation");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 240, 40));
        getContentPane().add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, 790, 10));

        jButton14.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save.png"))); // NOI18N
        jButton14.setText("Save");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 120, 40));

        jButton17.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        jButton17.setText("Clear All");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 500, 120, 40));
        getContentPane().add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 790, 10));

        jButton1.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jButton1.setText("SET");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 503, 80, 40));

        buttonGroup1.add(cb_pay);
        cb_pay.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        cb_pay.setText("Set all to PAID");
        getContentPane().add(cb_pay, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 500, 120, -1));

        buttonGroup1.add(cb_unpay);
        cb_unpay.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        cb_unpay.setText("Set all to UNPAID");
        cb_unpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_unpayActionPerformed(evt);
            }
        });
        getContentPane().add(cb_unpay, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 520, -1, -1));

        jButton13.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Print.png"))); // NOI18N
        jButton13.setText("Print");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 500, 120, 40));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_defLocationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_defLocationFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_defLocationFocusGained

    private void cmb_defLocationPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_defLocationPopupMenuWillBecomeInvisible

        if (cmb_defLocation.getSelectedItem().equals("=Location=")) {

            txt_locCode.setText("N/A");
            txt_locCode.setForeground(Color.red);

        } else {
            txt_locCode.setForeground(Color.black);
            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("SELECT * from location_reg where LocCode= '" + cmb_defLocation.getSelectedItem().toString() + "' OR LocName= '" + cmb_defLocation.getSelectedItem().toString() + "' ");
                while (rs.next()) {

                    String code = rs.getString("LocCode");
                    String name = rs.getString("LocName");

                    cmb_defLocation.setSelectedItem(name);
                    txt_locCode.setText(code);
                }

                //                ResultSet rs1 = st.executeQuery("select * from location_shift_rates where LocCode= '" + txt_locCode.getText() + "' ");
                //
                //                while (rs1.next()) {
                //
                //                    String rank = rs1.getString("Rank");
                //
                //                }
                //cmb_defLocation.setEditable(false);
                //cmb_defLocation.setEnabled(false);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_cmb_defLocationPopupMenuWillBecomeInvisible

    private void txt_locCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusGained
        // get_carder_and_enterd_shifts_total();//
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_locCodeFocusGained

    private void txt_locCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locCodeFocusLost

    private void cmb_monthPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_monthPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_cmb_monthPopupMenuWillBecomeInvisible

    private void cmb_yearPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_yearPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_cmb_yearPopupMenuWillBecomeInvisible

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        get_saved_advance_details();

        jButton10.setEnabled(false);
        cmb_defLocation.setEnabled(false);

    }//GEN-LAST:event_jButton10ActionPerformed

    private void txt_doc_noFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_doc_noFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_doc_noFocusGained

    private void txt_doc_noFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_doc_noFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_doc_noFocusLost

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        try {

            Connection con = DbConnection.getconnection();

            String sql = "update   salary_advance_1 set Status=? where EPFno=? and Amount=?  and Location=? and PayMonth=? and PayYear=? ";
            PreparedStatement pst = con.prepareStatement(sql);

            int nrow = jTable1.getModel().getRowCount();

            if (nrow == 0) {

            } else {
                for (int i = 0; nrow > i; i++) {

                    String loc = jTable1.getModel().getValueAt(i, 0).toString();
                    String rank = jTable1.getModel().getValueAt(i, 1).toString();
                    String empid = jTable1.getModel().getValueAt(i, 2).toString();
                    String name = jTable1.getModel().getValueAt(i, 3).toString();

                    String amount = jTable1.getModel().getValueAt(i, 4).toString();
                    Double d = Double.parseDouble(amount);
                    String Adv = String.format("%.2f", d);

                    String status = jTable1.getModel().getValueAt(i, 6).toString();

                    pst.setString(1, status);
                    pst.setString(2, empid);//empid
                    pst.setString(3, Adv);//amonut
                  //  pst.setString(4, txt_doc_no.getText());//ref ID
                    pst.setString(4, loc);//loc
                    pst.setString(5, cmb_month.getSelectedItem().toString());//month
                    pst.setString(6, cmb_year.getSelectedItem().toString());//year

                    pst.execute();

                }

                JOptionPane.showMessageDialog(rootPane, "Advance Status Updated...!");

                jButton17ActionPerformed(evt);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        int nrow = jTable1.getRowCount();

        int reply = JOptionPane.showConfirmDialog(rootPane, "Do you want to clear the table?", null, JOptionPane.YES_NO_OPTION);

        if (reply == JOptionPane.YES_OPTION) {

            if (nrow < 1) {
            } else {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);
            }

            cmb_defLocation.setSelectedIndex(0);
            //                cmb_month.setSelectedIndex(0);
            //                cmb_year.setSelectedIndex(0);

            txt_locCode.setText("");

            jButton10.setEnabled(true);
            cmb_defLocation.setEnabled(true);

        } else {

        }

    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int nrow = jTable1.getModel().getRowCount();

        if (nrow == 0) {

        } else {

            String stat = null;
            if (cb_pay.isSelected()) {
                stat = "PAID";
            } else if (cb_unpay.isSelected()) {
                stat = "UNPAID";
            }

            for (int i = 0; nrow > i; i++) {

                jTable1.setValueAt(stat, i, 6);

            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void cb_unpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_unpayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_unpayActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        RPT_Advance ad = new RPT_Advance();
        ad.setVisible(true);
        RPT_Advance.cmb_month.setSelectedItem(cmb_month.getSelectedItem());
        RPT_Advance.cmb_year.setSelectedItem(cmb_year.getSelectedItem());
        RPT_Advance.cmb_defLocation.setSelectedItem(cmb_defLocation.getSelectedItem());
        RPT_Advance.txt_locCode.setText(txt_locCode.getText());

        //        try {
        //
        //            Connection conn = (Connection) DbConnection.getconnection();
        //
        //            JasperDesign jd = JRXmlLoader.load("Reports\\Advance_LocationWise.jrxml");
        //            //String sql = "SELECT * FROM salary_advance_1  where IssueDate between '" + FromDate + "' and '" + ToDate + "' order by EPFno ";
        //
        //            int i = Integer.parseInt(txt_doc_no.getText());
        //            int x = i - 00001;
        //            String ref = String.format("%05d", x);
        //            System.out.println(ref);
        //
        //            String sql = "SELECT * FROM salary_advance_1 JOIN location_reg ON salary_advance_1.Location=location_reg.LocCode JOIN company_reg ON location_reg.LocType=company_reg.ComCode WHERE salary_advance_1.ReferenceID='" + ref + "'  ";
        //
        //            JRDesignQuery newQuery = new JRDesignQuery();
        //            newQuery.setText(sql);
        //            jd.setQuery(newQuery);
        //
        //            JasperReport jr = JasperCompileManager.compileReport(jd);
        //            JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
        //            JasperViewer.viewReport(jp, false);
        //
        //        } catch (Exception e) {
        //            e.printStackTrace();
        //        }
    }//GEN-LAST:event_jButton13ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//*************************Developed By TechSeed Solutions*************************************************
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Advance_Reconcilation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Advance_Reconcilation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Advance_Reconcilation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Advance_Reconcilation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Advance_Reconcilation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cb_pay;
    private javax.swing.JCheckBox cb_unpay;
    private javax.swing.JComboBox cmb_defLocation;
    private javax.swing.JComboBox cmb_month;
    private javax.swing.JComboBox cmb_year;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton17;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_doc_no;
    private javax.swing.JTextField txt_locCode;
    // End of variables declaration//GEN-END:variables

}
