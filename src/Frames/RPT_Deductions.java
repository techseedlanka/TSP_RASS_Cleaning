/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import static Frames.RPT_atten_summery.atten_sum;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Sapu
 */
public class RPT_Deductions extends javax.swing.JFrame {

    /**
     * Creates new form RPT_Deductions
     */
    static ArrayList deductions;

    PreparedStatement pst;
    Connection con;

    public RPT_Deductions() {
        initComponents();
        deductions = new ArrayList();

    }

    String EPFno = null;
    String EmpName = null;
    String Sal_Adv_01 = null;
    String Sal_Adv_02 = null;
    String Loan01 = null;
    String Loan02 = null;
    String Uniform = null;
    String Shoe = null;
    String welfare = null;
    String meal = null;
    String fine = null;
    String rental = null;
    String less_shift = null;
    String other_deduc = null;
    String death = null;
    String paid10 = null;
    String insuarance = null;
    String festival = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        cmb_month = new javax.swing.JComboBox();
        cmb_year = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel2.setText("Deductions Report");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 150, 40));
        getContentPane().add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 270, 10));
        getContentPane().add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 270, 10));

        cmb_month.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmb_month.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 204)));
        cmb_month.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_monthPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        cmb_year.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        cmb_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));
        cmb_year.setSelectedIndex(6);
        cmb_year.setSelectedItem("2017");
        cmb_year.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 204)));
        cmb_year.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_yearPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 70, -1));

        jButton2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fine Print.png"))); // NOI18N
        jButton2.setText("Veiw Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 170, 50));

        jLabel33.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel33.setText("Please Select a Relevent Month / Year  :-");
        getContentPane().add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_monthPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_monthPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_monthPopupMenuWillBecomeInvisible

    private void cmb_yearPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_yearPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_cmb_yearPopupMenuWillBecomeInvisible

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //  SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        // String FromDate = sdf.format(date_from.getDate());
        //   String ToDate = sdf.format(date_to.getDate());

        String Month = cmb_month.getSelectedItem().toString();
        String Year = cmb_year.getSelectedItem().toString();

        EPFno = null;
        EmpName = null;
        Sal_Adv_01 = null;
        Sal_Adv_02 = null;
        Loan01 = null;
        Loan02 = null;
        Uniform = null;
        Shoe = null;
        welfare = null;
        meal = null;
        fine = null;
        rental = null;
        less_shift = null;
        other_deduc = null;
        death = null;
        paid10 = null;
        insuarance = null;

        try {

            con = DbConnection.getconnection();

            String sql01 = "select * from employee_reg where IsResigned='0'  order by EmployeeNo";
            pst = con.prepareStatement(sql01);
            ResultSet rst = pst.executeQuery();
            while (rst.next()) {

                EPFno = rst.getString("EmployeeNo");
                //System.out.println("EPF: " + EPFno);
//                pst.close();
//                rst.close();

                String sql02 = "select *,SUM(Amount) from salary_advance_1 where EPFno=? and PayMonth=? and PayYear=?  ";
                pst = con.prepareStatement(sql02);
                pst.setString(1, EPFno);
                pst.setString(2, Month);
                pst.setString(3, Year);

                ResultSet rst2 = pst.executeQuery();
                while (rst2.next()) {
                    Sal_Adv_01 = rst2.getString("SUM(Amount)");
                    //System.out.println(EPFno + " " + Sal_Adv_01);
                }

                String sql03 = "select *,SUM(Amount) from salary_advance_2 where EPFno=? and PayMonth=? and PayYear=?  ";
                pst = con.prepareStatement(sql03);
                pst.setString(1, EPFno);
                pst.setString(2, Month);
                pst.setString(3, Year);

                ResultSet rst3 = pst.executeQuery();
                while (rst3.next()) {
                    Sal_Adv_02 = rst3.getString("SUM(Amount)");
                    //System.out.println(EPFno + " " + "Sal_Adv_02:" + Sal_Adv_02);
                }

                String sql04 = "select *,SUM(Rental) from distress_loan where EPFno=? and   Status='on-going'";
                pst = con.prepareStatement(sql04);
                pst.setString(1, EPFno);

                ResultSet rst4 = pst.executeQuery();
                while (rst4.next()) {
                    Loan01 = rst4.getString("SUM(Rental)");
                    //System.out.println(EPFno + " " + "Loan01:" + Loan01);
                }

                String sql05 = "select *,SUM(Rental) from distress_loan_02 where EPFno=? and   Status='on-going'";
                pst = con.prepareStatement(sql05);
                pst.setString(1, EPFno);

                ResultSet rst5 = pst.executeQuery();
                while (rst5.next()) {
                    Loan02 = rst5.getString("SUM(Rental)");
                    //System.out.println(EPFno + " " + "Loan02:" + Loan02);
                }

                String sql06 = "select *,SUM(Rental) from shoes_issue where EPFno=? and  Status='on-going'";
                pst = con.prepareStatement(sql06);
                pst.setString(1, EPFno);

                ResultSet rst6 = pst.executeQuery();
                while (rst6.next()) {
                    Shoe = rst6.getString("SUM(Rental)");
                    //System.out.println(EPFno + " " + "Shoe:" + Shoe);
                }

                String sql07 = "select *,SUM(Rental) from uniform_issue where EPFno=? and  Status='on-going'";
                pst = con.prepareStatement(sql07);
                pst.setString(1, EPFno);

                ResultSet rst7 = pst.executeQuery();
                while (rst7.next()) {
                    Uniform = rst7.getString("SUM(Rental)");
                    //System.out.println(EPFno + " " + "Shoe:" + Shoe);
                }

                String sql08 = "select * from salary_manual_deductions where EPFno=? and Month=? and Year=? ";
                pst = con.prepareStatement(sql08);
                pst.setString(1, EPFno);
                pst.setString(2, Month);
                pst.setString(3, Year);

                ResultSet rst8 = pst.executeQuery();
                while (rst8.next()) {

                    meal = rst8.getString("Meal");
                    fine = rst8.getString("Fines");
                    rental = rst8.getString("Rental");
                    less_shift = rst8.getString("LessShift");
                    death = rst8.getString("DeathDonation");
                    other_deduc = rst8.getString("OtherDeduc");
                    paid10 = rst8.getString("PaidSalary10th");
                    insuarance = rst8.getString("Insuarance");

                }

                String sql09 = "select * from employee_reg where EPFno=? ";
                pst = con.prepareStatement(sql09);
                pst.setString(1, EPFno);

                ResultSet rst9 = pst.executeQuery();
                while (rst9.next()) {
                    EmpName = rst9.getString("NameWithInitials");
                    welfare = rst9.getString("Welfare");
                    //System.out.println(EPFno + " " + "Shoe:" + Shoe);
                }

                String sql10 = "select *,SUM(Rental) from salary_advance_festival where EPFno=? and  Status='on-going'";
                pst = con.prepareStatement(sql10);
                pst.setString(1, EPFno);

                ResultSet rst10 = pst.executeQuery();
                while (rst10.next()) {
                    festival = rst10.getString("SUM(Rental)");
                    //System.out.println(EPFno + " " + "Shoe:" + Shoe);
                }

                if ((Sal_Adv_01 == null) && (Sal_Adv_02 == null) && (Loan01 == null) && (Loan02 == null) && (Uniform == null) && (Shoe == null) && (meal == null) && (rental == null) && (fine == null) && (less_shift == null) && (other_deduc == null) && (death == null) && (paid10 == null) && (insuarance == null) && (festival == null)) {
                    //  System.out.println(" Epf: "+EPFno+" null");
                } else {

                    bean_deduction bds = new bean_deduction();

                    bds.setEmpname(EmpName);
                    bds.setEpfno(EPFno);
                    bds.setSal_Adv_01(Sal_Adv_01);
                    bds.setSal_Adv_02(Sal_Adv_02);
                    bds.setLoan01(Loan01);
                    bds.setLoan02(Loan02);
                    bds.setUniform(Uniform);
                    bds.setShoe(Shoe);
                    bds.setWelfare(welfare);
                    bds.setMeal(meal);
                    bds.setRental(rental);
                    bds.setFine(fine);
                    bds.setLess_shift(less_shift);
                    bds.setOther_deduc(other_deduc);
                    bds.setDeath(death);
                    bds.setPaid10(paid10);
                    bds.setInsuarance(insuarance);
                    bds.setFestival(festival);
                    bds.setDmonth(Month);
                    bds.setDyear(Year);

                    clear();
                    deductions.add(bds);
                }

                //System.out.println(EPFno + " " + "Sal_Adv_01: " + Sal_Adv_01 + " Sal_Adv_02: " + Sal_Adv_02 + " Loan01: " + Loan01 + " Loan02: " + Loan02 + " Shoe:" + Shoe + " Uniform:" + Uniform);
            }

            print();
            deductions.clear();

        } catch (Exception e) {
            e.printStackTrace();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RPT_Deductions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RPT_Deductions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RPT_Deductions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RPT_Deductions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RPT_Deductions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_month;
    private javax.swing.JComboBox cmb_year;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    // End of variables declaration//GEN-END:variables

    void print() {
        try {
            JRBeanCollectionDataSource bcds = new JRBeanCollectionDataSource(deductions);
            String path = "Reports\\deductions.jrxml";//Attendance_Summery_Single_Loc
            JasperReport jr = JasperCompileManager.compileReport(path);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, bcds);
            JasperViewer.viewReport(jp, false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clear() {
        EPFno = null;
        EmpName = null;
        Sal_Adv_01 = null;
        Sal_Adv_02 = null;
        Loan01 = null;
        Loan02 = null;
        Uniform = null;
        Shoe = null;
        welfare = null;
        meal = null;
        fine = null;
        rental = null;
        less_shift = null;
        other_deduc = null;
        death = null;
        paid10 = null;
        insuarance = null;

    }

}
