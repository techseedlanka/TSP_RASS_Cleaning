/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 * TECHSEED SOLUTIONS
 *
 * @author Sapumal Bandara @ TechSeed Solutions
 */
public class Attn_Allowance extends javax.swing.JFrame {

    /**
     * Creates new form Attn_Allowance
     */
    public Attn_Allowance() {
        initComponents();
        get_Location_Details();
    }

    private void get_Location_Details() {
        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * from location_reg order by LocName");
            while (rs.next()) {

                Object name = rs.getString("LocName");
                //Object code = rs.getString("LocCode");

                //cmb_defLocation.addItem(code);
                cmb_defLocation.addItem(name);
            }

            AutoCompleteDecorator.decorate(cmb_defLocation);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_amt = new javax.swing.JTextField();
        cmb_defLocation = new javax.swing.JComboBox();
        txt_locCode = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_rank = new javax.swing.JTextField();
        txt_max = new javax.swing.JTextField();
        txt_min = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        txt_amt_ma = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_days_ma = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_rank_ma = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText(" Allowances");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 240, 40));

        txt_amt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_amt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_amtFocusGained(evt);
            }
        });
        txt_amt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_amtActionPerformed(evt);
            }
        });
        txt_amt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_amtKeyPressed(evt);
            }
        });
        getContentPane().add(txt_amt, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 80, 25));

        cmb_defLocation.setEditable(true);
        cmb_defLocation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_defLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=Location=" }));
        cmb_defLocation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmb_defLocationFocusGained(evt);
            }
        });
        cmb_defLocation.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
                cmb_defLocationPopupMenuCanceled(evt);
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_defLocationPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_defLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 360, -1));

        txt_locCode.setEditable(false);
        txt_locCode.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_locCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusLost(evt);
            }
        });
        txt_locCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_locCodeActionPerformed(evt);
            }
        });
        getContentPane().add(txt_locCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 50, 23));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rank Code", "Rank Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 190, 290));

        jTable2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LOC", "Rank", "Amount", "Min", "Max", "line"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(23);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(5).setMinWidth(0);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(0);
            jTable2.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 250, 320));

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel5.setText("    Amount :-");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 80, 20));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel6.setText("Maximum Days :-");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 120, 20));

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel7.setText("Minimum Days :-");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 120, 20));

        txt_rank.setEditable(false);
        txt_rank.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_rank.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_rankFocusGained(evt);
            }
        });
        txt_rank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_rankActionPerformed(evt);
            }
        });
        txt_rank.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_rankKeyPressed(evt);
            }
        });
        getContentPane().add(txt_rank, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, 80, 25));

        txt_max.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_max.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_maxFocusGained(evt);
            }
        });
        txt_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_maxActionPerformed(evt);
            }
        });
        txt_max.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_maxKeyPressed(evt);
            }
        });
        getContentPane().add(txt_max, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 80, 25));

        txt_min.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_min.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_minFocusGained(evt);
            }
        });
        txt_min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_minActionPerformed(evt);
            }
        });
        txt_min.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_minKeyPressed(evt);
            }
        });
        getContentPane().add(txt_min, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 80, 25));

        jButton1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Delete.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 340, 70, 40));

        jButton2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save.png"))); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 220, 50));

        jButton3.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        jButton3.setText("Clear All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, 130, 40));
        getContentPane().add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1010, 10));

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel8.setText(" Amount :-");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 90, 70, 20));

        txt_amt_ma.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_amt_ma.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_amt_maFocusGained(evt);
            }
        });
        txt_amt_ma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_amt_maActionPerformed(evt);
            }
        });
        txt_amt_ma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_amt_maKeyPressed(evt);
            }
        });
        getContentPane().add(txt_amt_ma, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 90, 80, 25));

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel9.setText("Days :-");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 60, 50, 20));

        txt_days_ma.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_days_ma.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_days_maFocusGained(evt);
            }
        });
        txt_days_ma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_days_maActionPerformed(evt);
            }
        });
        txt_days_ma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_days_maKeyPressed(evt);
            }
        });
        getContentPane().add(txt_days_ma, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 60, 70, 25));

        jLabel10.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel10.setText("  Rank :-");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 60, 60, 20));

        txt_rank_ma.setEditable(false);
        txt_rank_ma.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_rank_ma.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_rank_maFocusGained(evt);
            }
        });
        txt_rank_ma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_rank_maActionPerformed(evt);
            }
        });
        txt_rank_ma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_rank_maKeyPressed(evt);
            }
        });
        getContentPane().add(txt_rank_ma, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 60, 80, 25));

        jTable3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Location", "Rank", "Amount", "Days", "Divisible", "line"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setRowHeight(23);
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTable3.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable3.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable3.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable3.getColumnModel().getColumn(4).setPreferredWidth(60);
            jTable3.getColumnModel().getColumn(5).setPreferredWidth(1);
        }

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 160, 290, 170));

        jButton4.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save.png"))); // NOI18N
        jButton4.setText("Save");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 90, 120, 50));

        jButton5.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Delete.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 340, 80, 40));

        jCheckBox1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jCheckBox1.setText("Divisible");
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 120, -1, -1));

        jLabel11.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel11.setText(" Rank :-");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 50, 20));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Machine Allowance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 14))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 40, 310, 350));

        jLabel12.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Attendance Allowance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 14))); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 700, 350));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_amtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_amtFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_amtFocusGained

    private void txt_amtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_amtActionPerformed
        jButton2.grabFocus();   // TODO add your handling code here:
    }//GEN-LAST:event_txt_amtActionPerformed

    private void txt_amtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_amtKeyPressed


    }//GEN-LAST:event_txt_amtKeyPressed

    private void cmb_defLocationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_defLocationFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_defLocationFocusGained

    private void cmb_defLocationPopupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_defLocationPopupMenuCanceled
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_defLocationPopupMenuCanceled

    private void cmb_defLocationPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_defLocationPopupMenuWillBecomeInvisible

        if (cmb_defLocation.getSelectedItem().equals("=Location=")) {

            txt_locCode.setText("** Please Select a Location ");
            txt_locCode.setForeground(Color.red);

        } else {
            txt_locCode.setForeground(Color.black);
            try {

                Statement st0 = DbConnection.getconnection().createStatement();
                ResultSet rs0 = st0.executeQuery("SELECT * from location_reg where LocCode= '" + cmb_defLocation.getSelectedItem().toString() + "' OR LocName= '" + cmb_defLocation.getSelectedItem().toString() + "' ");
                while (rs0.next()) {

                    String code = rs0.getString("LocCode");
                    String name = rs0.getString("LocName");

                    cmb_defLocation.setSelectedItem(name);
                    txt_locCode.setText(code);
                }

                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("SELECT * from salary_rates where LocCode= '" + txt_locCode.getText() + "' ");
                while (rs.next()) {

                    String code = rs.getString("RankCode");
                    String name = rs.getString("Rank");

                    Vector v = new Vector();
                    v.add(code);
                    v.add(name);
                    dtm.addRow(v);

                }

                DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
                dtm2.setRowCount(0);
                Statement st1 = DbConnection.getconnection().createStatement();
                ResultSet rs1 = st1.executeQuery("SELECT * from attn_allowance where LocCode= '" + txt_locCode.getText() + "' ");
                while (rs1.next()) {

                    String code = rs1.getString("LocCode");
                    String rank = rs1.getString("Rank");
                    String amt = rs1.getString("Amount");
                    String min = rs1.getString("Min");
                    String max = rs1.getString("Max");
                    String line = rs1.getString("line");

                    Vector v = new Vector();
                    v.add(code);
                    v.add(rank);
                    v.add(amt);
                    v.add(min);
                    v.add(max);
                    v.add(line);

                    dtm2.addRow(v);

                }

                DefaultTableModel dtm1 = (DefaultTableModel) jTable3.getModel();
                dtm1.setRowCount(0);
                Statement st2 = DbConnection.getconnection().createStatement();
                ResultSet rs2 = st2.executeQuery("SELECT * from machine_allowance where LocCode= '" + txt_locCode.getText() + "' ");
                while (rs2.next()) {

                    Vector v1 = new Vector();
                    v1.add(rs2.getString("LocCode"));
                    v1.add(rs2.getString("Rank"));
                    v1.add(rs2.getString("Amount"));
                    v1.add(rs2.getString("Days"));

                    v1.add(rs2.getString("Devide"));
                    v1.add(rs2.getString("line"));

                    dtm1.addRow(v1);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }

//        String s = txt_locCode.getText();
//
//        if (s.equals("** Please Select a Location ") | s.isEmpty()) {
//
//        } else {
//
//        }
    }//GEN-LAST:event_cmb_defLocationPopupMenuWillBecomeInvisible

    private void txt_locCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusGained
        // get_carder_and_enterd_shifts_total();//
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locCodeFocusGained

    private void txt_locCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locCodeFocusLost

    private void txt_locCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_locCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locCodeActionPerformed

    private void txt_rankFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_rankFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rankFocusGained

    private void txt_rankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_rankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rankActionPerformed

    private void txt_rankKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_rankKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rankKeyPressed

    private void txt_maxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_maxFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_maxFocusGained

    private void txt_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_maxActionPerformed
        txt_min.grabFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txt_maxActionPerformed

    private void txt_maxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_maxKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_maxKeyPressed

    private void txt_minFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_minFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_minFocusGained

    private void txt_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_minActionPerformed
        txt_amt.grabFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txt_minActionPerformed

    private void txt_minKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_minKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_minKeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        if (evt.getClickCount() == 2) {

            if (jTable1.getRowCount() < 0) {

            } else {
                int row = jTable1.getSelectedRow();
                txt_rank.setText(jTable1.getValueAt(row, 0).toString());
                txt_rank_ma.setText(jTable1.getValueAt(row, 0).toString());
                txt_max.grabFocus();

            }

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if (txt_rank.getText().isEmpty() | txt_locCode.getText().isEmpty()) {
        } else {
            try {

                String rank = txt_rank.getText();
                String loc = txt_locCode.getText();
                String min = txt_min.getText();
                String max = txt_max.getText();
                String amt = txt_amt.getText();

                Connection con = DbConnection.getconnection();
                PreparedStatement pst = null;
//                String sql_del = "delete from attn_allowance where LocCode='" + loc + "' and Rank='" + rank + "'";
//                pst = con.prepareStatement(sql_del);
//                pst.execute();

                PreparedStatement pst_save = null;
                String sql_save = "insert into attn_allowance (LocCode,Rank,Min,Max,Amount) values('" + loc + "','" + rank + "','" + min + "','" + max + "','" + amt + "')";
                pst_save = con.prepareStatement(sql_save);
                pst_save.execute();

                DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
                Vector v = new Vector();

                v.add(loc);
                v.add(rank);
                v.add(amt);
                v.add(min);
                v.add(max);
                dtm.addRow(v);

                DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
                dtm2.setRowCount(0);
                Statement st1 = DbConnection.getconnection().createStatement();
                ResultSet rs1 = st1.executeQuery("SELECT * from attn_allowance where LocCode= '" + txt_locCode.getText() + "' ");
                while (rs1.next()) {

                    Vector v1 = new Vector();
                    v1.add(rs1.getString("LocCode"));
                    v1.add(rs1.getString("Rank"));
                    v1.add(rs1.getString("Amount"));
                    v1.add(rs1.getString("Min"));
                    v1.add(rs1.getString("Max"));
                    v1.add(rs1.getString("line"));

                    dtm2.addRow(v1);

                }

                txt_rank.setText("");
                //txt_locCode.setText("");
                txt_min.setText("");
                txt_max.setText("");
                txt_amt.setText("");

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        txt_rank.setText("");
        txt_locCode.setText("");
        txt_min.setText("");
        txt_max.setText("");
        txt_amt.setText("");

        DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
        dtm2.setRowCount(0);

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);

        cmb_defLocation.setSelectedIndex(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int reply = JOptionPane.showConfirmDialog(rootPane, "Do you want to DELETE this record?", "DELETE", JOptionPane.YES_NO_OPTION);

        if (reply == JOptionPane.YES_OPTION) {

            try {
                Connection con = DbConnection.getconnection();
                PreparedStatement pst = null;

                int r = jTable2.getSelectedRow();
                String loc = jTable2.getValueAt(r, 0).toString();
                String rank = jTable2.getValueAt(r, 1).toString();
                String amt = jTable2.getValueAt(r, 2).toString();
                String min = jTable2.getValueAt(r, 3).toString();
                String max = jTable2.getValueAt(r, 4).toString();
                String line = jTable2.getValueAt(r, 5).toString();
                System.out.println("line "+line);

                String sql_del = "delete from attn_allowance where line='" + line + "'";
                pst = con.prepareStatement(sql_del);
                pst.execute();

                DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
                dtm.removeRow(r);

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_amt_maFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_amt_maFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_amt_maFocusGained

    private void txt_amt_maActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_amt_maActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_amt_maActionPerformed

    private void txt_amt_maKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_amt_maKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_amt_maKeyPressed

    private void txt_days_maFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_days_maFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_days_maFocusGained

    private void txt_days_maActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_days_maActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_days_maActionPerformed

    private void txt_days_maKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_days_maKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_days_maKeyPressed

    private void txt_rank_maFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_rank_maFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rank_maFocusGained

    private void txt_rank_maActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_rank_maActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rank_maActionPerformed

    private void txt_rank_maKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_rank_maKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rank_maKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (txt_rank_ma.getText().isEmpty() | txt_locCode.getText().isEmpty() | txt_amt_ma.getText().isEmpty() | txt_days_ma.getText().isEmpty()) {
        } else {
            try {

                String rank = txt_rank_ma.getText();
                String loc = txt_locCode.getText();
                String day = txt_days_ma.getText();
                String amt = txt_amt_ma.getText();
                String devide = "0";
                if (jCheckBox1.isSelected()) {
                    devide = "1";
                } else {
                    devide = "0";
                }

                Connection con = DbConnection.getconnection();
                PreparedStatement pst = null;
//                String sql_del = "delete from attn_allowance where LocCode='" + loc + "' and Rank='" + rank + "'";
//                pst = con.prepareStatement(sql_del);
//                pst.execute();

                PreparedStatement pst_save = null;
                String sql_save = "insert into machine_allowance (LocCode,Rank,Amount,Days,Devide) values('" + loc + "','" + rank + "','" + amt + "','" + day + "','" + devide + "')";
                pst_save = con.prepareStatement(sql_save);
                pst_save.execute();

                DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
                Vector v = new Vector();

                v.add(loc);
                v.add(rank);
                v.add(amt);
                v.add(day);
                v.add(devide);

                dtm.addRow(v);

                DefaultTableModel dtm2 = (DefaultTableModel) jTable3.getModel();
                dtm2.setRowCount(0);
                Statement st1 = DbConnection.getconnection().createStatement();
                ResultSet rs1 = st1.executeQuery("SELECT * from machine_allowance where LocCode= '" + txt_locCode.getText() + "' ");
                while (rs1.next()) {

                    Vector v1 = new Vector();
                    v1.add(rs1.getString("LocCode"));
                    v1.add(rs1.getString("Rank"));
                    v1.add(rs1.getString("Amount"));
                    v1.add(rs1.getString("Days"));

                    v1.add(rs1.getString("Devide"));
                    v1.add(rs1.getString("line"));

                    dtm2.addRow(v1);

                }

                txt_rank_ma.setText("");
                //txt_locCode.setText("");

                txt_amt_ma.setText("");
                txt_days_ma.setText("");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int reply = JOptionPane.showConfirmDialog(rootPane, "Do you want to DELETE this record?", "DELETE", JOptionPane.YES_NO_OPTION);

        if (reply == JOptionPane.YES_OPTION) {

            try {
                Connection con = DbConnection.getconnection();
                PreparedStatement pst = null;

                int r = jTable3.getSelectedRow();

                String line = jTable3.getValueAt(r, 5).toString();

                String sql_del = "delete from machine_allowance where line='" + line + "'";
                pst = con.prepareStatement(sql_del);
                pst.execute();

                DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
                dtm.removeRow(r);

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//*************************Developed By TechSeed Solutions*************************************************
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Attn_Allowance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Attn_Allowance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Attn_Allowance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attn_Allowance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Attn_Allowance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_defLocation;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    public static javax.swing.JTextField txt_amt;
    public static javax.swing.JTextField txt_amt_ma;
    public static javax.swing.JTextField txt_days_ma;
    private javax.swing.JTextField txt_locCode;
    public static javax.swing.JTextField txt_max;
    public static javax.swing.JTextField txt_min;
    public static javax.swing.JTextField txt_rank;
    public static javax.swing.JTextField txt_rank_ma;
    // End of variables declaration//GEN-END:variables

}
