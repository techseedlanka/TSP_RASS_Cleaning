/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import java.awt.Toolkit;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Sapumal Bandara
 */
public class AuditReport extends javax.swing.JFrame {

    /**
     * Creates new form AuditReport
     */
    public AuditReport() {
        initComponents();
        icon.setVisible(false);
        tbl_feildStaff.setVisible(false);
        jScrollPane1.setVisible(false);
        TitleBar();
    }

    private void TitleBar() {
        this.setTitle("Audit Reports");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("techseed.png")));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        cmb_monthFrom = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        cmb_yearFrom = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cmb_monthTo = new javax.swing.JComboBox();
        cmb_yearTo = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        cmb_Company = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        cmb_Type = new javax.swing.JComboBox();
        jSeparator10 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_feildStaff = new javax.swing.JTable();
        icon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText("Audit Reports");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 170, 40));
        getContentPane().add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 380, 10));

        cmb_monthFrom.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_monthFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmb_monthFrom.setSelectedIndex(3);
        getContentPane().add(cmb_monthFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 160, 30));

        jLabel18.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("To : ");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 50, 30));

        cmb_yearFrom.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        cmb_yearFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2019", "2020", "2021", "2022" }));
        cmb_yearFrom.setSelectedIndex(3);
        cmb_yearFrom.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_yearFromPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_yearFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 80, 30));

        jLabel19.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel19.setText("Financial Year :");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 30));

        jLabel20.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("From : ");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 50, 30));

        cmb_monthTo.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_monthTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmb_monthTo.setSelectedIndex(2);
        getContentPane().add(cmb_monthTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 160, 30));

        cmb_yearTo.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        cmb_yearTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2019", "2020", "2021", "2022" }));
        cmb_yearTo.setSelectedIndex(3);
        cmb_yearTo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_yearToPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_yearTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, 80, 30));

        jLabel21.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Company : ");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 80, 30));

        cmb_Company.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_Company.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Express", "Target ", "Diamond" }));
        cmb_Company.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_CompanyPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_Company, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 260, 30));

        jLabel22.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText(" Type : ");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 80, 30));

        cmb_Type.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        cmb_Type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Salary" }));
        getContentPane().add(cmb_Type, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 260, 30));
        getContentPane().add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 380, 10));

        jButton2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/New Icons/icons8_xls_32px.png"))); // NOI18N
        jButton2.setText("Export to Excel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 340, 50));

        tbl_feildStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Month", "Location", "EMP Count", "Total Duty", "BRA", "Basic", "PoyaAndSunday", "OT", "Attn Incentive", "Site Incentive", "Attn Allowance", "Machine Allowance", "Special Allowance", "Other Allowance", "Gross Salary", "Welfare", "Advance", "Festival", "Loan", "OtherDeductions", "Uniform", "Meals", "EPF 8", "Total Deductions", "Net Pay", "Salary for EPF", "ETF3", "EPF12"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_feildStaff.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tbl_feildStaff);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 80, 30));

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/loading_.gif"))); // NOI18N
        getContentPane().add(icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 80, 70));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_yearFromPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_yearFromPopupMenuWillBecomeInvisible
        // set_date_range();
    }//GEN-LAST:event_cmb_yearFromPopupMenuWillBecomeInvisible

    private void cmb_yearToPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_yearToPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_yearToPopupMenuWillBecomeInvisible
    int wb_write = 0;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String userDir = System.getProperty("user.home");

        JFileChooser excelFileChooser = new JFileChooser(userDir + "/Desktop");
        excelFileChooser.setDialogTitle("Save As ..");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        excelFileChooser.showSaveDialog(null);

        String outputPath = excelFileChooser.getSelectedFile() + ".xlsx";
        DefaultTableModel dtm = (DefaultTableModel) tbl_feildStaff.getModel();

        Thread hilo = new Thread(() -> {
            icon.setVisible(true);
            try {
                final Locale locale1 = Locale.UK;
                String date1 = cmb_monthFrom.getSelectedItem().toString() + "-" + cmb_yearFrom.getSelectedItem().toString();
                String date2 = cmb_monthTo.getSelectedItem().toString() + "-" + cmb_yearTo.getSelectedItem().toString();
                DateFormat df2 = new SimpleDateFormat("MMMMM-yyyy", Locale.UK);
                Date dateFrom = df2.parse(date1);
                Date dateTo = df2.parse(date2);
                List<String> months = getListMonths(dateFrom, dateTo, locale1, df2);
                int size = months.size();

                months.forEach((month) -> {
                    String[] m = month.split("-");
                    String monthName = m[0];
                    String year = m[1];

                    get_data(monthName, year, cmb_Company.getSelectedItem().toString());
                    exportDataToExcel(size, month, outputPath);

                    dtm.setRowCount(0);
                });

                if (wb_write == 0) {
                    icon.setVisible(false);
                } else {
                    icon.setIcon(new ImageIcon(getClass().getResource("/icon/success.png")));
                }

            } catch (ParseException ex) {
                ex.printStackTrace();
                Logger.getLogger(AuditReport.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "ERROR " + ex.getMessage());
            }

        });
        hilo.start();


    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmb_CompanyPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_CompanyPopupMenuWillBecomeInvisible
        String loc = cmb_Company.getSelectedItem().toString().substring(0, 1);
        System.out.println(loc);
    }//GEN-LAST:event_cmb_CompanyPopupMenuWillBecomeInvisible

    public static List<String> getListMonths(Date dateFrom, Date dateTo, Locale locale, DateFormat df) {
        Calendar calendar = Calendar.getInstance(locale);
        calendar.setTime(dateFrom);

        List<String> months = new ArrayList<>();

        while (calendar.getTime().getTime() <= dateTo.getTime()) {
            months.add(df.format(calendar.getTime()));
            calendar.add(Calendar.MONTH, 1);

        }

        return months;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuditReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuditReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuditReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuditReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuditReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_Company;
    private javax.swing.JComboBox cmb_Type;
    private javax.swing.JComboBox cmb_monthFrom;
    private javax.swing.JComboBox cmb_monthTo;
    private javax.swing.JComboBox cmb_yearFrom;
    private javax.swing.JComboBox cmb_yearTo;
    private javax.swing.JLabel icon;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable tbl_feildStaff;
    // End of variables declaration//GEN-END:variables

    private void get_data(String month, String year, String company) {
        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        try {

            //  String week = cmb_week.getSelectedItem().toString();
            con = DbConnection.getconnection();

            String sql = null;
            String loc = company.substring(0, 1);

            sql = "select *,COUNT(*),SUM(TotalDuty),SUM(BRA),SUM(Basic),SUM(PoyaAndSunday),SUM(OT),SUM(AttnIncentive),SUM(SiteIncentive),SUM(AttnAllowance),"
                    + "SUM(MachineAllowance),SUM(SpecialAllowance),SUM(OtherAllowance),SUM(GrossSalary),SUM(Welfare),SUM(Festival),SUM(OtherDeductions),SUM(Uniform),"
                    + "SUM(Meals),SUM(EPF8),SUM(NetPay),SUM(TotalDeductions),SUM(SalaryforEPF),SUM(ETF3),SUM(EPF12),SUM(Loan+Loan2),SUM(Advance+Advance2) from salary_final_site_employees "
                    + "where Status='NEW' and SalaryType='FINAL' and Month='" + month + "' and Year='" + year + "' and  Loc like '%" + loc + "%' GROUP BY LocName";

            pst = con.prepareStatement(sql);
              rs = pst.executeQuery();
            DefaultTableModel dtm = (DefaultTableModel) tbl_feildStaff.getModel();
//            dtm.setRowCount(0);

            while (rs.next()) {

                Vector v = new Vector();
                v.add(rs.getString("Loc") + " - " + rs.getString("LocName"));
                v.add(rs.getString("Month") + " " + rs.getString("Year"));
                v.add(Double.parseDouble(rs.getString("COUNT(*)")));
//                v.add(rs.getString("EPFno"));
//                v.add(rs.getString("Name"));
//                v.add(rs.getString("Rank"));
                v.add(Double.parseDouble(rs.getString("SUM(TotalDuty)")));
                v.add(Double.parseDouble(rs.getString("SUM(BRA)")));
                v.add(Double.parseDouble(rs.getString("SUM(Basic)")));
                v.add(Double.parseDouble(rs.getString("SUM(PoyaAndSunday)")));
                v.add(Double.parseDouble(rs.getString("SUM(OT)")));
                v.add(Double.parseDouble(rs.getString("SUM(AttnIncentive)")));
                v.add(Double.parseDouble(rs.getString("SUM(SiteIncentive)")));
                v.add(Double.parseDouble(rs.getString("SUM(AttnAllowance)")));
                v.add(Double.parseDouble(rs.getString("SUM(MachineAllowance)")));
                v.add(Double.parseDouble(rs.getString("SUM(SpecialAllowance)")));

                v.add(Double.parseDouble(rs.getString("SUM(OtherAllowance)")));
                v.add(Double.parseDouble(rs.getString("SUM(GrossSalary)")));
                v.add(Double.parseDouble(rs.getString("SUM(Welfare)")));
                v.add(Double.parseDouble(rs.getString("SUM(Advance+Advance2)")));
                v.add(Double.parseDouble(rs.getString("SUM(Festival)")));

                v.add(Double.parseDouble(rs.getString("SUM(Loan+Loan2)")));
                v.add(Double.parseDouble(rs.getString("SUM(OtherDeductions)")));
                v.add(Double.parseDouble(rs.getString("SUM(Uniform)")));
                v.add(Double.parseDouble(rs.getString("SUM(Meals)")));

                v.add(Double.parseDouble(rs.getString("SUM(EPF8)")));

                v.add(Double.parseDouble(rs.getString("SUM(TotalDeductions)")));
                v.add(Double.parseDouble(rs.getString("SUM(NetPay)")));
                v.add(Double.parseDouble(rs.getString("SUM(SalaryforEPF)")));
                v.add(Double.parseDouble(rs.getString("SUM(ETF3)")));
                v.add(Double.parseDouble(rs.getString("SUM(EPF12)")));

                dtm.addRow(v);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            }
        }

    }

    public void exportDataToExcel(int count, String month, String path) {

        DefaultTableModel model = (DefaultTableModel) tbl_feildStaff.getModel();

        FileOutputStream excelFos = null;
        XSSFWorkbook wb = null;
        BufferedOutputStream excelBos = null;
        try {

//            JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\Authentic\\Desktop");
//
//            excelFileChooser.setDialogTitle("Save As ..");
//
//            FileNameExtensionFilter fnef = new FileNameExtensionFilter("Files", "xls", "xlsx", "xlsm");
//
//            excelFileChooser.setFileFilter(fnef);
//            int chooser = excelFileChooser.showSaveDialog(null);
//            String outputPath = excelFileChooser.getSelectedFile() + ".xlsx";
            if (path != null) {

                File file = new File(path);

                // Create a FileInputStream object
                // for getting the information of the file
                // Getting the workbook instance for XLSX file
                // Ensure if file exist or not
                if (file.isFile() && file.exists()) {
                    FileInputStream fip = new FileInputStream(file);
                    wb = new XSSFWorkbook(fip);
                } else {
                    wb = new XSSFWorkbook();
                }

                //
                XSSFSheet excelSheet;
//                for (int sheet = 0; sheet < count; sheet++) {
                System.out.println("month......... " + month);
                excelSheet = wb.createSheet(month);

                //Set Headers
                XSSFRow row = excelSheet.createRow(0);
                XSSFCell cell;
                for (int c = 0; c < model.getColumnCount(); c++) {
                    cell = row.createCell(c);
                    cell.setCellValue(model.getColumnName(c));
//                    System.out.println(model.getColumnName(c));
                }

                for (int i = 0; i < model.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i + 1);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);

                        if (j > 1 && j < 45) {

                            excelCell.setCellValue((double) model.getValueAt(i, j));
                        } else {
                            excelCell.setCellValue(model.getValueAt(i, j).toString());
                        }

                    }
                }
                excelFos = new FileOutputStream(path);
                excelBos = new BufferedOutputStream(excelFos);
                wb.write(excelBos);
                //JOptionPane.showMessageDialog(null, "Exported Successfully");
//                }
            }
            wb_write = 1;
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } finally {
            try {
                if (excelFos != null) {
                    excelFos.close();
                }
                if (excelBos != null) {
                    excelBos.close();
                }
//                if (excelJTableExport != null) {
//                    excelJTableExport.c;
//                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }

    private String select_month(int m) {

        String month;
        switch (m) {
            case 1:
                month = "January";
                break;
            case 2:
                month = "February";
                break;
            case 3:
                month = "March";
                break;
            case 4:
                month = "April";
                break;
            case 5:
                month = "May";
                break;
            case 6:
                month = "June";
                break;
            case 7:
                month = "July";
                break;
            case 8:
                month = "August";
                break;
            case 9:
                month = "September";
                break;
            case 10:
                month = "October";
                break;
            case 11:
                month = "November";
                break;
            case 12:
                month = "December";
                break;
            default:
                throw new AssertionError();
        }

        return month;

    }

}
