/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.TimeZone;
import java.util.Vector;

import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 * TECHSEED SOLUTIONS
 *
 * @author Sapumal Bandara @ TechSeed Solutions
 */
public class EMP_BankAcc_Details extends javax.swing.JFrame {

    /**
     * Creates new form EMP_BankAcc_Details
     */
    ArrayList al;

    public EMP_BankAcc_Details() {
        initComponents();
        autoComplete_EMP_Details();
        get_bank_name();
        TitleBar();
        al = new ArrayList();
        get_Location_Details();

    }

    private void TitleBar() {
        this.setTitle("Employee Bank Account");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("techseed.png")));
    }

    private void get_Location_Details() {
        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * from location_reg order by LocName");
            while (rs.next()) {

                Object name = rs.getString("LocName");
                //Object code = rs.getString("LocCode");

                //cmb_defLocation.addItem(code);
                cmb_defLocation.addItem(name);
            }

            AutoCompleteDecorator.decorate(cmb_defLocation);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void autoComplete_EMP_Details() {

        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from employee_reg   ");

            TextAutoCompleter ta = new TextAutoCompleter(txt_empName);
            //TextAutoCompleter ta1 = new TextAutoCompleter(txt_empName);

            while (rs.next()) {

                String name = rs.getString("NameWithInitials");
                //String code = rs.getString("EmployeeNo");

                ta.addItem(name);
                //  ta1.addItem(code);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void get_bank_name() {

        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from bank_main group by BankName  ");

            TextAutoCompleter ta = new TextAutoCompleter(txt_bankName);
            // TextAutoCompleter a = new TextAutoCompleter(txt_branchName);

            while (rs.next()) {

                String name = rs.getString("BankName");
                ta.addItem(name);

                //  a.addItem(rs.getString("BranchName"));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void get_branch_name() {

        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from bank_main where BankCode='" + txt_bankCode.getText() + "'  ");

            TextAutoCompleter a = new TextAutoCompleter(txt_branchName);

            while (rs.next()) {
                a.addItem(rs.getString("BranchName"));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void table_to_ireport() {
        int nrow = jTable1.getModel().getRowCount();
        jp3.setValue(0);
        jp3.setMaximum(nrow);
        System.out.println(jp3.getMaximum());
        if (nrow == 0) {

        } else {

            for (int i = 0; nrow>i; i++) {
                jp3.setValue(i+1);
                System.out.println(i);
                bean_EMP_Bank_Acc bds = new bean_EMP_Bank_Acc();
                bds.setUnit(cmb_defLocation.getSelectedItem().toString());
                bds.setEmp(jTable1.getModel().getValueAt(i, 0).toString());
                bds.setName(jTable1.getModel().getValueAt(i, 1).toString());
                bds.setRank(jTable1.getModel().getValueAt(i, 2).toString());
                bds.setPay(jTable1.getModel().getValueAt(i, 6).toString());
                bds.setBank(jTable1.getModel().getValueAt(i, 5).toString());
                bds.setBranch(jTable1.getModel().getValueAt(i, 7).toString());
                bds.setAcc(jTable1.getModel().getValueAt(i, 8).toString());

                al.add(bds);

            }

            print();
            al.clear();
        }

    }

    void print() {
        try {
            JRBeanCollectionDataSource bcds = new JRBeanCollectionDataSource(al);
            String path = "Reports\\EMP_Bank_ACC_Details.jrxml";
            JasperReport jr = JasperCompileManager.compileReport(path);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, bcds);
            JasperViewer.viewReport(jp, false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        cmb_payType = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txt_bankCode = new javax.swing.JTextField();
        txt_bankName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_AccName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_nic = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_empName = new javax.swing.JTextField();
        txt_empCode = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_branchName = new javax.swing.JTextField();
        txt_branchCode = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_address = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jp3 = new javax.swing.JProgressBar();
        jButton4 = new javax.swing.JButton();
        txt_locCode = new javax.swing.JTextField();
        cmb_defLocation = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText("Employee Bank Account Deatails");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 270, 40));
        getContentPane().add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 400, 10));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel4.setText(" Bank :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, 20));

        cmb_payType.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        cmb_payType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Non", "Hand", "Bank", "Slip" }));
        cmb_payType.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
                cmb_payTypePopupMenuCanceled(evt);
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_payTypePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_payType, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 100, 25));

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel5.setText("Pay Type :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, 25));

        txt_bankCode.setEditable(false);
        txt_bankCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_bankCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 60, 25));

        txt_bankName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_bankName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_bankNameFocusGained(evt);
            }
        });
        txt_bankName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bankNameActionPerformed(evt);
            }
        });
        txt_bankName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_bankNameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_bankName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 260, 25));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel6.setText("      Account No :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, 20));

        txt_AccName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_AccName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_AccNameFocusGained(evt);
            }
        });
        txt_AccName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_AccNameActionPerformed(evt);
            }
        });
        txt_AccName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_AccNameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_AccName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 260, 25));

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel7.setText("  NIC no :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, 20));

        txt_nic.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_nic.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nicFocusGained(evt);
            }
        });
        txt_nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nicActionPerformed(evt);
            }
        });
        txt_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nicKeyPressed(evt);
            }
        });
        getContentPane().add(txt_nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 260, 25));

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel8.setText("Employee :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));

        txt_empName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_empName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_empNameFocusGained(evt);
            }
        });
        txt_empName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                txt_empNameCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        txt_empName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_empNameActionPerformed(evt);
            }
        });
        txt_empName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_empNameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_empName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 260, 25));

        txt_empCode.setEditable(false);
        txt_empCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_empCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, 60, 25));

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel9.setText("Branch :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 20));

        txt_branchName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_branchName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_branchNameFocusGained(evt);
            }
        });
        txt_branchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_branchNameActionPerformed(evt);
            }
        });
        txt_branchName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_branchNameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_branchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 260, 25));

        txt_branchCode.setEditable(false);
        txt_branchCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_branchCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, 60, 25));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel10.setText("* As mentioned in account holder's pass book.");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 290, 20));

        txt_address.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_address.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_addressFocusGained(evt);
            }
        });
        txt_address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addressActionPerformed(evt);
            }
        });
        txt_address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_addressKeyPressed(evt);
            }
        });
        getContentPane().add(txt_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 260, 25));

        jLabel11.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel11.setText("Address :");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, 20));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setText("*");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 20, 20));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setText("*");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 20, 20));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel14.setText("*");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 20, 20));

        jButton1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 110, 40));

        jButton2.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save.png"))); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 110, 40));

        jButton3.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton3.setText("<html>Veiw Bank<br> Acc Details<html>");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 110, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMP no", "Name", "Rank", "Pay Type", "Bank", "Bank Name", "Branch", "Branch Name", "Account", "Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(50);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 700, 310));

        jp3.setStringPainted(true);
        getContentPane().add(jp3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 450, 40));

        jButton4.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Print.png"))); // NOI18N
        jButton4.setText("<html>Print Bank<br> Acc Details<html>");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 50, 140, 40));

        txt_locCode.setEditable(false);
        txt_locCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_locCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_locCodeFocusLost(evt);
            }
        });
        getContentPane().add(txt_locCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, 60, 23));

        cmb_defLocation.setEditable(true);
        cmb_defLocation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_defLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=Location=" }));
        cmb_defLocation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmb_defLocationFocusGained(evt);
            }
        });
        cmb_defLocation.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_defLocationPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_defLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 390, -1));

        jLabel16.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel16.setText("Location :-");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, -1, 40));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_bankNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_bankNameFocusGained

    }//GEN-LAST:event_txt_bankNameFocusGained

    private void txt_bankNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bankNameActionPerformed
        //        txt_Shifts.grabFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bankNameActionPerformed
    private void get_EMP_bankName() {
        if (txt_bankName.getText().isEmpty()) {

        } else {
            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("select * from bank_main where BankName='" + txt_bankName.getText() + "' OR BankCode='" + txt_bankName.getText() + "'  ");
                while (rs.next()) {

                    String code = rs.getString("BankCode");
                    String name = rs.getString("BankName");
                    txt_bankName.setText(name);
                    txt_bankCode.setText(code);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }
            if (txt_bankCode.getText().isEmpty()) {
            } else {
                get_branch_name();
            }
            txt_branchName.grabFocus();
        }
    }
    private void txt_bankNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_bankNameKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            get_EMP_bankName();
        }


    }//GEN-LAST:event_txt_bankNameKeyPressed

    private void txt_AccNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_AccNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AccNameFocusGained

    private void txt_AccNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_AccNameActionPerformed
        txt_nic.grabFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AccNameActionPerformed

    private void txt_AccNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_AccNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AccNameKeyPressed

    private void txt_nicFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nicFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nicFocusGained

    private void txt_nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nicActionPerformed
        txt_address.grabFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nicActionPerformed

    private void txt_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nicKeyPressed

    private void txt_empNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_empNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_empNameFocusGained

    private void txt_empNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_empNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_empNameActionPerformed

    private void get_emp_bank_details() {
        if (txt_empName.getText().isEmpty()) {

        } else {
            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("select * from employee_reg where NameWithInitials='" + txt_empName.getText() + "' OR EmployeeNo='" + txt_empName.getText() + "' ");
                while (rs.next()) {

                    String code = rs.getString("EmployeeNo");
                    String name = rs.getString("NameWithInitials");
                    String pay = rs.getString("PayType");

                    cmb_payType.setSelectedItem(pay);
                    txt_empCode.setText(code);
                    txt_empName.setText(name);

                }

                Statement st1 = DbConnection.getconnection().createStatement();
                ResultSet rs1 = st1.executeQuery("select * from emp_bank_acc where EMPno='" + txt_empCode.getText() + "'");
                while (rs1.next()) {

                    txt_bankName.setText(rs1.getString("Bank"));
                    txt_branchName.setText(rs1.getString("Branch"));
                    txt_AccName.setText(rs1.getString("AccName"));
                    txt_nic.setText(rs1.getString("AccNIC"));
                    txt_address.setText(rs1.getString("AccAddress"));

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }


    private void txt_empNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_empNameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            get_emp_bank_details();
            txt_bankNameKeyPressed(evt);
            txt_branchNameKeyPressed(evt);

        }
    }//GEN-LAST:event_txt_empNameKeyPressed

    private void txt_branchNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_branchNameFocusGained

        // TODO add your handling code here:
    }//GEN-LAST:event_txt_branchNameFocusGained

    private void txt_branchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_branchNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_branchNameActionPerformed
    private void get_EMP_branchName() {
        if (txt_branchName.getText().isEmpty()) {

        } else {
            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("select * from bank_main where BranchName='" + txt_branchName.getText() + "' OR BranchCode='" + txt_branchName.getText() + "' and BankCode='"+txt_bankCode.getText()+"' ");
                while (rs.next()) {

                    String code = rs.getString("BranchCode");
                    String name = rs.getString("BranchName");

                    txt_branchCode.setText(code);
                    txt_branchName.setText(name);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

            txt_AccName.grabFocus();
        }
    }
    private void txt_branchNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_branchNameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            get_EMP_branchName();
        }

    }//GEN-LAST:event_txt_branchNameKeyPressed

    private void txt_addressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_addressFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addressFocusGained

    private void txt_addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addressActionPerformed

    private void txt_addressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_addressKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addressKeyPressed

    private void cmb_payTypePopupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_payTypePopupMenuCanceled
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_payTypePopupMenuCanceled

    private void cmb_payTypePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_payTypePopupMenuWillBecomeInvisible
        if (cmb_payType.getSelectedIndex() == 0) { //"Non" selected

            txt_AccName.setText("N/A");
            txt_address.setText("N/A");
            txt_bankCode.setText("N/A");
            txt_bankName.setText("N/A");
            txt_branchCode.setText("N/A");
            txt_nic.setText("N/A");
            txt_branchName.setText("N/A");

            txt_AccName.setEnabled(false);
            txt_address.setEnabled(false);
            txt_bankName.setEnabled(false);
            txt_nic.setEnabled(false);
            txt_branchName.setEnabled(false);

            txt_bankName.grabFocus();

        }
    }//GEN-LAST:event_cmb_payTypePopupMenuWillBecomeInvisible

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int reply = JOptionPane.showConfirmDialog(rootPane, "Do yo want to clear all?", "Clear", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            txt_AccName.setText("");
            txt_address.setText("");
            txt_bankCode.setText("");
            txt_bankName.setText("");
            txt_branchCode.setText("");
            txt_nic.setText("");
            txt_branchName.setText("");
            txt_empName.setText("");
            txt_empCode.setText("");

            txt_AccName.setEnabled(true);
            txt_address.setEnabled(true);
            txt_bankName.setEnabled(true);
            txt_nic.setEnabled(true);
            txt_branchName.setEnabled(true);

        } else {
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if (txt_empCode.getText().isEmpty() | txt_bankCode.getText().isEmpty() | txt_branchCode.getText().isEmpty()) {
        } else {

            try {

                Connection con = DbConnection.getconnection();
                PreparedStatement pst = null;
                PreparedStatement pst_del = null;
                String del = "delete from emp_bank_acc where EMPno='" + txt_empCode.getText() + "'";
                pst_del = con.prepareStatement(del);
                pst_del.executeUpdate();

                System.out.println("deleted");

                String sql = "insert into emp_bank_acc (EMPno,PayType,Bank,Branch,AccName,AccNIC,AccAddress) values (?,?,?,?,?,?,?)";
                pst = con.prepareStatement(sql);
                pst.setString(1, txt_empCode.getText().trim());
                pst.setString(2, cmb_payType.getSelectedItem().toString());
                pst.setString(3, txt_bankCode.getText().trim());
                pst.setString(4, txt_branchCode.getText().trim());
                pst.setString(5, txt_AccName.getText().trim());
                pst.setString(6, txt_nic.getText().trim());
                pst.setString(7, txt_address.getText().trim());

                pst.executeUpdate();
                
                PreparedStatement pst_update = null;
                String update = "update  employee_reg set PayType='"+cmb_payType.getSelectedItem().toString()+"' where EmployeeNo='" + txt_empCode.getText() + "'";
                pst_update = con.prepareStatement(update);
                pst_update.executeUpdate();

                JOptionPane.showMessageDialog(rootPane, "Employee Pay Type Details are Saved!");

            } catch (Exception e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        get_emp_bank_details();
        get_EMP_bankName();
        get_EMP_branchName();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void txt_empNameCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt_empNameCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_empNameCaretPositionChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Thread hilo = new Thread(new Runnable() {

            @Override
            public void run() {

                get2();

            }
        });
        hilo.start();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Thread hilo = new Thread(new Runnable() {

            @Override
            public void run() {

                table_to_ireport();

            }
        });
        hilo.start();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txt_locCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusGained
        // get_carder_and_enterd_shifts_total();//
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_locCodeFocusGained

    private void txt_locCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_locCodeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locCodeFocusLost

    private void cmb_defLocationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmb_defLocationFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_defLocationFocusGained

    private void cmb_defLocationPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_defLocationPopupMenuWillBecomeInvisible

        if (cmb_defLocation.getSelectedItem().equals("=Location=")) {

            txt_locCode.setText("N/A");
            txt_locCode.setForeground(Color.red);

        } else {
            txt_locCode.setForeground(Color.black);
            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("SELECT * from location_reg where LocCode= '" + cmb_defLocation.getSelectedItem().toString() + "' OR LocName= '" + cmb_defLocation.getSelectedItem().toString() + "' ");
                while (rs.next()) {

                    String code = rs.getString("LocCode");
                    String name = rs.getString("LocName");

                    cmb_defLocation.setSelectedItem(name);
                    txt_locCode.setText(code);
                }

                //                ResultSet rs1 = st.executeQuery("select * from location_shift_rates where LocCode= '" + txt_locCode.getText() + "' ");
                //
                //                while (rs1.next()) {
                //
                //                    String rank = rs1.getString("Rank");
                //
                //                }
                //cmb_defLocation.setEditable(false);
                //cmb_defLocation.setEnabled(false);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_cmb_defLocationPopupMenuWillBecomeInvisible

    public void get() {
        long start = System.currentTimeMillis();

        try {

            String BankCode = "";
            String BranchCode = "";
            String EmpCode = "";
            String BankName = "";
            String BranchName = "";
            String EmpName = "";
            String Rank = "";
            String PayType = "";
            String BankACC = "";

            Connection con = DbConnection.getconnection();

            String sql = "select * from emp_bank_acc";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {

                BankCode = rs.getString("Bank");
                BranchCode = rs.getString("Branch");
                EmpCode = rs.getString("EMPno");
                BankACC = rs.getString("AccName");
                Vector v = new Vector();
                v.add(EmpCode);
                v.add(EmpName);
                v.add(Rank);
                v.add(PayType);
                v.add(BankCode);
                v.add(BankName);
                v.add(BranchCode);
                v.add(BranchName);
                v.add(BankACC);

                dtm.addRow(v);

            }

            int nrow = jTable1.getModel().getRowCount();
            jp3.setMaximum(nrow - 1);
            if (nrow == 0) {

            } else {
                for (int i = 0; nrow > i; i++) {

                    jp3.setValue(i);
                    String emp = jTable1.getModel().getValueAt(i, 0).toString();

                    String sql1 = null;

                    sql1 = "select * from employee_reg where EmployeeNo='" + emp + "' ";

                    PreparedStatement pst1 = con.prepareStatement(sql1);
                    ResultSet rs1 = pst1.executeQuery();
                    while (rs1.next()) {

                        jTable1.getModel().setValueAt(rs1.getString("NameWithInitials"), i, 1);
                        jTable1.getModel().setValueAt(rs1.getString("Designation"), i, 2);
                        jTable1.getModel().setValueAt(rs1.getString("PayType"), i, 3);
                        jTable1.getModel().setValueAt(rs1.getString("DefLocation"), i, 9);

                    }

                    String bank = jTable1.getModel().getValueAt(i, 4).toString();
                    String branch = jTable1.getModel().getValueAt(i, 6).toString();

                    String sql_b = "select * from bank_main where BankCode='" + bank + "' ";
                    PreparedStatement pst_b = con.prepareStatement(sql_b);
                    ResultSet rs_b = pst_b.executeQuery();
                    while (rs_b.next()) {

                        jTable1.getModel().setValueAt(rs_b.getString("BankName"), i, 5);

                    }

                    String sql_b1 = "select * from bank_main where  BranchCode='" + branch + "'";
                    PreparedStatement pst_b1 = con.prepareStatement(sql_b1);
                    ResultSet rs_b1 = pst_b1.executeQuery();
                    while (rs_b1.next()) {

                        jTable1.getModel().setValueAt(rs_b1.getString("BranchName"), i, 7);

                    }

                }
            }

            System.out.println("ROWs " + dtm.getRowCount());

        } catch (Exception e) {
            e.printStackTrace();
        }
        long duration = System.currentTimeMillis() - start;
        DateFormat df = new SimpleDateFormat("HH 'Hours', mm 'Min(s),' ss 'Second(s)'");
        df.setTimeZone(TimeZone.getTimeZone("GMT+0"));
        System.out.println(df.format(new Date(duration)));
        JOptionPane.showMessageDialog(rootPane, "Process Completed in " + df.format(new Date(duration)));

        jp3.setValue(0);
        jp3.setMaximum(0);
    }

    public void get2() {
        long start = System.currentTimeMillis();

        try {

            String BankCode = "";
            String BranchCode = "";
            String EmpCode = "";
            String BankName = "";
            String BranchName = "";
            String EmpName = "";
            String Rank = "";
            String PayType = "";
            String BankACC = "";

            Connection con = DbConnection.getconnection();

            if (cmb_defLocation.getSelectedIndex() == 0) {

                String sql = "select * from emp_bank_acc";
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);
                while (rs.next()) {

                    BankCode = rs.getString("Bank");
                    BranchCode = rs.getString("Branch");
                    EmpCode = rs.getString("EMPno");
                    BankACC = rs.getString("AccName");
                    Vector v = new Vector();
                    v.add(EmpCode);
                    v.add(EmpName);
                    v.add(Rank);
                    v.add(PayType);
                    v.add(BankCode);
                    v.add(BankName);
                    v.add(BranchCode);
                    v.add(BranchName);
                    v.add(BankACC);

                    dtm.addRow(v);

                }

                int nrow = jTable1.getModel().getRowCount();
                jp3.setMaximum(nrow);
                if (nrow == 0) {

                } else {
                    for (int i = 0; nrow > i; i++) {

                        jp3.setValue(i+1);
                        String emp = jTable1.getModel().getValueAt(i, 0).toString();

                        String sql1 = null;

                        sql1 = "select * from employee_reg where EmployeeNo='" + emp + "' ";

                        PreparedStatement pst1 = con.prepareStatement(sql1);
                        ResultSet rs1 = pst1.executeQuery();
                        while (rs1.next()) {

                            jTable1.getModel().setValueAt(rs1.getString("NameWithInitials"), i, 1);
                            jTable1.getModel().setValueAt(rs1.getString("Designation"), i, 2);
                            jTable1.getModel().setValueAt(rs1.getString("PayType"), i, 3);
                            jTable1.getModel().setValueAt(rs1.getString("DefLocation"), i, 9);

                        }

                        String bank = jTable1.getModel().getValueAt(i, 4).toString();
                        String branch = jTable1.getModel().getValueAt(i, 6).toString();

                        String sql_b = "select * from bank_main where BankCode='" + bank + "' ";
                        PreparedStatement pst_b = con.prepareStatement(sql_b);
                        ResultSet rs_b = pst_b.executeQuery();
                        while (rs_b.next()) {

                            jTable1.getModel().setValueAt(rs_b.getString("BankName"), i, 5);

                        }

                        String sql_b1 = "select * from bank_main where  BranchCode='" + branch + "'";
                        PreparedStatement pst_b1 = con.prepareStatement(sql_b1);
                        ResultSet rs_b1 = pst_b1.executeQuery();
                        while (rs_b1.next()) {

                            jTable1.getModel().setValueAt(rs_b1.getString("BranchName"), i, 7);

                        }

                    }
                }
                System.out.println("ROWs " + dtm.getRowCount());
            } else {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);

                String sql = "select * from employee_reg where DefLocation='" + txt_locCode.getText() + "'";
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {

                    EmpCode = rs.getString("EmployeeNo");
                    System.out.println(EmpCode);
                    String sql2 = "select * from emp_bank_acc where EMPno='" + EmpCode + "'";
                    PreparedStatement pst2 = con.prepareStatement(sql2);
                    ResultSet rs2 = pst2.executeQuery();

                    while (rs2.next()) {

                        BankCode = rs2.getString("Bank");
                        BranchCode = rs2.getString("Branch");
                        EmpCode = rs2.getString("EMPno");
                        BankACC = rs2.getString("AccName");
                        Vector v = new Vector();
                        v.add(EmpCode);
                        v.add(EmpName);
                        v.add(Rank);
                        v.add(PayType);
                        v.add(BankCode);
                        v.add(BankName);
                        v.add(BranchCode);
                        v.add(BranchName);
                        v.add(BankACC);

                        dtm.addRow(v);

                    }
                }

                int nrow = jTable1.getModel().getRowCount();
                jp3.setMaximum(nrow);
                if (nrow == 0) {

                } else {
                    for (int i = 0; nrow > i; i++) {
                        jp3.setValue(i+1);
                        String emp = jTable1.getModel().getValueAt(i, 0).toString();

                        String sql1 = null;

                        sql1 = "select * from employee_reg where EmployeeNo='" + emp + "' ";

                        PreparedStatement pst1 = con.prepareStatement(sql1);
                        ResultSet rs1 = pst1.executeQuery();
                        while (rs1.next()) {

                            jTable1.getModel().setValueAt(rs1.getString("NameWithInitials"), i, 1);
                            jTable1.getModel().setValueAt(rs1.getString("Designation"), i, 2);
                            jTable1.getModel().setValueAt(rs1.getString("PayType"), i, 3);
                            jTable1.getModel().setValueAt(rs1.getString("DefLocation"), i, 9);

                        }

                        String bank = jTable1.getModel().getValueAt(i, 4).toString();
                        String branch = jTable1.getModel().getValueAt(i, 6).toString();

                        String sql_b = "select * from bank_main where BankCode='" + bank + "' ";
                        PreparedStatement pst_b = con.prepareStatement(sql_b);
                        ResultSet rs_b = pst_b.executeQuery();
                        while (rs_b.next()) {

                            jTable1.getModel().setValueAt(rs_b.getString("BankName"), i, 5);

                        }

                        String sql_b1 = "select * from bank_main where  BranchCode='" + branch + "'";
                        PreparedStatement pst_b1 = con.prepareStatement(sql_b1);
                        ResultSet rs_b1 = pst_b1.executeQuery();
                        while (rs_b1.next()) {

                            jTable1.getModel().setValueAt(rs_b1.getString("BranchName"), i, 7);

                        }

                    }
                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        long duration = System.currentTimeMillis() - start;
        DateFormat df = new SimpleDateFormat("HH 'Hours', mm 'Min(s),' ss 'Second(s)'");
        df.setTimeZone(TimeZone.getTimeZone("GMT+0"));
        System.out.println(df.format(new Date(duration)));
        JOptionPane.showMessageDialog(rootPane, "Process Completed in " + df.format(new Date(duration)));

        jp3.setValue(0);
        jp3.setMaximum(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//*************************Developed By TechSeed Solutions*************************************************
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EMP_BankAcc_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EMP_BankAcc_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EMP_BankAcc_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EMP_BankAcc_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EMP_BankAcc_Details().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_defLocation;
    private javax.swing.JComboBox<String> cmb_payType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable1;
    private javax.swing.JProgressBar jp3;
    private javax.swing.JTextField txt_AccName;
    private javax.swing.JTextField txt_address;
    private javax.swing.JTextField txt_bankCode;
    private javax.swing.JTextField txt_bankName;
    private javax.swing.JTextField txt_branchCode;
    private javax.swing.JTextField txt_branchName;
    private javax.swing.JTextField txt_empCode;
    public static javax.swing.JTextField txt_empName;
    private javax.swing.JTextField txt_locCode;
    private javax.swing.JTextField txt_nic;
    // End of variables declaration//GEN-END:variables

}
