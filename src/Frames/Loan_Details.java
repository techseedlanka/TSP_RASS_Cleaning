/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sapumal Bandara @ TechSeed Solutions
 */
public class Loan_Details extends javax.swing.JFrame {

    /**
     * Creates new form Loan_Details
     */
    public Loan_Details() {
        initComponents();
        Employee_auto_completer();
    }

    private void Employee_auto_completer() {

        try {

            Statement st = DbConnection.getconnection().createStatement();
            ResultSet rs = st.executeQuery("select * from employee_reg where IsResigned=0 ");

            TextAutoCompleter ta = new TextAutoCompleter(txt_emp_name);

            while (rs.next()) {
                String code = rs.getString("EPFno");
                String NameWithInitials = rs.getString("NameWithInitials");

                ta.addItem(code);
                ta.addItem(NameWithInitials);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        txt_emp_name = new javax.swing.JTextField();
        txt_empid = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmb_loanStatus = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Installments = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Loan_details = new javax.swing.JTable();
        jSeparator13 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        cmb_loanType = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jSeparator14 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txt_status = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txt_loan_ref = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmb_ChangeStatus = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        date_to = new com.toedter.calendar.JDateChooser();
        date_from = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cb_date_all = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel1.setText("Loan ' Status ' Change");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 280, 180, 30));

        jSeparator12.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 280, 390, 10));

        txt_emp_name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_emp_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_emp_nameKeyPressed(evt);
            }
        });
        getContentPane().add(txt_emp_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 320, 23));

        txt_empid.setEditable(false);
        txt_empid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_empid, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 60, 23));

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel8.setText("Loan Status  :-");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, -1, 20));

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel9.setText("Employee  :-");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 50, 80, 20));

        cmb_loanStatus.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_loanStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Settled", "On-Going", "HOLD" }));
        getContentPane().add(cmb_loanStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 90, -1));

        jTable_Installments.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTable_Installments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Received Amt.", "Pay Month", "Revecived Date", "Note"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Installments.setRowHeight(23);
        jScrollPane1.setViewportView(jTable_Installments);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 70, 380, 200));

        jButton1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search.png"))); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 120, 70));

        jCheckBox1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jCheckBox1.setText("All");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, -1, -1));

        filler1.setBackground(new java.awt.Color(102, 102, 102));
        filler1.setForeground(new java.awt.Color(102, 102, 102));
        filler1.setOpaque(true);
        getContentPane().add(filler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(632, 40, 1, 440));

        jTable_Loan_details.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTable_Loan_details.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMP No.", "Name", "Loan Amount", "Installments", "Rental", "Issued Date", "Last Ins: Date", "Loan Reference"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Loan_details.setRowHeight(20);
        jTable_Loan_details.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Loan_detailsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Loan_details);
        if (jTable_Loan_details.getColumnModel().getColumnCount() > 0) {
            jTable_Loan_details.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable_Loan_details.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable_Loan_details.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable_Loan_details.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable_Loan_details.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable_Loan_details.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable_Loan_details.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable_Loan_details.getColumnModel().getColumn(7).setPreferredWidth(1);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 620, 320));
        getContentPane().add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 1030, 10));

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel2.setText("Issued Loan Details");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 140, 40));

        cmb_loanType.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_loanType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Loan 01", "Loan 02" }));
        getContentPane().add(cmb_loanType, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 90, -1));

        jButton2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Refresh.png"))); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 0, -1, -1));
        getContentPane().add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1020, 10));

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel3.setText("Received Installments Details");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 230, 30));

        txt_status.setEditable(false);
        txt_status.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 360, 70, -1));

        jLabel11.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel11.setText("Issued To :-");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 70, 20));

        jButton3.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save as.png"))); // NOI18N
        jButton3.setText("Change");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 420, -1, -1));

        jLabel12.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel12.setText("Loan Reference :-");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 320, -1, 20));

        txt_loan_ref.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_loan_ref, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 320, 150, -1));

        jLabel13.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel13.setText("Change  Status    As :-");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 430, -1, 20));

        cmb_ChangeStatus.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_ChangeStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "HOLD", "settled", "on-going" }));
        getContentPane().add(cmb_ChangeStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 430, 90, -1));

        jLabel14.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel14.setText("Current Status :-");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 360, -1, 20));

        jLabel10.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Change Status", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 0, 12))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 400, 390, 80));

        date_to.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(date_to, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, 120, 25));

        date_from.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(date_from, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 120, 25));

        jLabel15.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel15.setText("   Loan Type  :-");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 20));

        jLabel17.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel17.setText(" Issued From :-");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, 20));

        cb_date_all.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        cb_date_all.setText("All");
        cb_date_all.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cb_date_allStateChanged(evt);
            }
        });
        cb_date_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_date_allActionPerformed(evt);
            }
        });
        getContentPane().add(cb_date_all, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_emp_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emp_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {

                Statement st = DbConnection.getconnection().createStatement();
                ResultSet rs = st.executeQuery("select * from employee_reg where EPFno='" + txt_emp_name.getText() + "' or NameWithInitials='" + txt_emp_name.getText() + "'");
                while (rs.next()) {

                    txt_emp_name.setText(rs.getString("NameWithInitials"));
                    txt_empid.setText(rs.getString("EPFno"));

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_emp_nameKeyPressed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        if (jCheckBox1.isSelected()) {

            txt_emp_name.setEditable(false);
            txt_emp_name.setText("All Employees");

        } else {

            txt_emp_name.setEditable(true);
            txt_empid.setText("");
            txt_emp_name.setText("");

        }
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {

            txt_emp_name.setEditable(false);
            txt_emp_name.setText("All Employees");

        } else {

            txt_emp_name.setEditable(true);
            txt_empid.setText("");
            txt_emp_name.setText("");

        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void search_loan() {

        try {

            Connection con = DbConnection.getconnection();
            PreparedStatement pst;
            ResultSet rs;
            String sql = null;

            String loan_type = null;
            String loan_stat = null;

            if (cmb_loanType.getSelectedIndex() == 0) {
                loan_type = "distress_loan";
            } else {
                loan_type = "distress_loan_02";
            }

            if (cmb_loanStatus.getSelectedIndex() == 0) {
                loan_stat = "settled";
            }

            if (cmb_loanStatus.getSelectedIndex() == 1) {
                loan_stat = "on-going";
            }
            if (cmb_loanStatus.getSelectedIndex() == 2) {
                loan_stat = "HOLD";
            }

            if (jCheckBox1.isSelected()) {//all_employee

                if (cb_date_all.isSelected()) {//all_date

                    sql = "select * from  `" + loan_type + "` where Status='" + loan_stat + "'";

                } else {//selected_date

                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

                    if (date_from.getDate() == null | date_from.getDate() == null) {

                    } else {

                        String from = sdf.format(date_from.getDate());
                        String to = sdf.format(date_to.getDate());
                        sql = "select * from  `" + loan_type + "` where Status='" + loan_stat + "' and IssueOn between '" + from + "' and '" + to + "'";

                    }

                }

            } else {//selected_employee

                if (cb_date_all.isSelected()) {//all_date

                    sql = "select * from  `" + loan_type + "` where EPFno='" + txt_empid.getText() + "' and Status='" + loan_stat + "'";

                } else {//selected_date

                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

                    if (date_from.getDate() == null | date_from.getDate() == null) {

                    } else {

                        String from = sdf.format(date_from.getDate());
                        String to = sdf.format(date_to.getDate());
                        sql = "select * from  `" + loan_type + "` where EPFno='" + txt_empid.getText() + "' and Status='" + loan_stat + "' and IssueOn between '" + from + "' and '" + to + "'";

                    }

                }

            }

            pst = con.prepareStatement(sql);

            rs = pst.executeQuery();

            DefaultTableModel dtm = (DefaultTableModel) jTable_Loan_details.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {

                String epf = rs.getString("EPFno");

                Vector v = new Vector();

                v.add(epf);
                v.add("");

                v.add(rs.getString("LoanAmount"));
                v.add(rs.getString("Installments"));
                v.add(rs.getString("Rental"));
                v.add(rs.getString("IssueOn"));
                v.add(rs.getString("LastInstallment"));
                v.add(rs.getString("LoanReference"));

                dtm.addRow(v);

            }

            for (int row = 0; row < jTable_Loan_details.getRowCount(); row++) {

                String epf = jTable_Loan_details.getValueAt(row, 0).toString();
                PreparedStatement pst2 = con.prepareStatement("Select * from employee_reg where EmployeeNo='" + epf + "'");
                ResultSet rs2 = pst2.executeQuery();
                while (rs2.next()) {
                    jTable_Loan_details.setValueAt(rs2.getString("NameWithInitials"), row, 1);

                }

            }

            cmb_loanStatus.setEnabled(false);
            cmb_loanType.setEnabled(false);
            txt_emp_name.setEnabled(false);
            jButton1.setEnabled(false);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, e);

        }

    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        search_loan();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        cmb_loanStatus.setEnabled(true);
        cmb_loanType.setEnabled(true);
        txt_emp_name.setEnabled(true);
        txt_loan_ref.setText("");
        txt_status.setText("");
        jCheckBox1.setSelected(false);
        cb_date_all.setSelected(false);
        jButton1.setEnabled(true);

        DefaultTableModel dtm = (DefaultTableModel) jTable_Loan_details.getModel();
        dtm.setRowCount(0);

        DefaultTableModel dtm1 = (DefaultTableModel) jTable_Installments.getModel();
        dtm1.setRowCount(0);


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable_Loan_detailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Loan_detailsMouseClicked
        if (evt.getClickCount() == 2) {

            int row = jTable_Loan_details.getRowCount();

            if (row > 0) {
                int get_row = jTable_Loan_details.getSelectedRow();
                String code = jTable_Loan_details.getModel().getValueAt(get_row, 7).toString();
                String loan_type = null;

                if (cmb_loanType.getSelectedIndex() == 0) {
                    loan_type = "distress_loan_settelment";
                } else {
                    loan_type = "distress_loan_settelment_02";
                }

                txt_loan_ref.setText(code);
                txt_status.setText(cmb_loanStatus.getSelectedItem().toString());

                try {

                    Connection con = DbConnection.getconnection();
                    PreparedStatement pstt = null;
                    ResultSet rst = null;

                    String sql = "select * from `" + loan_type + "` where LoanReference='" + code + "' order by RevecivedDate";

                    pstt = con.prepareStatement(sql);
                    rst = pstt.executeQuery();

                    DefaultTableModel dtm = (DefaultTableModel) jTable_Installments.getModel();
                    dtm.setRowCount(0);

                    while (rst.next()) {

                        String month = rst.getString("Month");
                        String year = rst.getString("Year");

                        Vector v = new Vector();

                        v.add(rst.getString("ReceivedAmount"));

                        v.add(month + " - " + year);
                        v.add(rst.getString("RevecivedDate"));
                        v.add(rst.getString("Note"));

                        dtm.addRow(v);

                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

            } else {

            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_Loan_detailsMouseClicked

    private void status_change() {

        String userNameValue;
        String passwordValue;

        JLabel jUserName = new JLabel("User Name");
        JTextField userName = new JTextField();
        JLabel jPassword = new JLabel("Password");
        JTextField password = new JPasswordField();
        Object[] ob = {jUserName, userName, jPassword, password};

        int result = JOptionPane.showConfirmDialog(null, ob, "Please input password", JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            userNameValue = userName.getText();
            passwordValue = password.getText();

            String uname = null;

            try {
                Statement st2 = DbConnection.getconnection().createStatement();
                ResultSet rs2 = st2.executeQuery("select * from user where UserName = '" + userName.getText() + "'");

                while (rs2.next()) {

                    String UN = rs2.getString("UserName");
                    String pass = rs2.getString("Password");
                    String cat = rs2.getString("UserCat");

                    if (UN.equals(userNameValue) & pass.equals(passwordValue)) {

                        if (cat.equals("system_admin") | cat.equals("admin") | cat.equals("manager")) {

//update query begins*************************************************************************************************
                            String loan_type = null;

                            if (cmb_loanType.getSelectedIndex() == 0) {
                                loan_type = "distress_loan";
                            } else {
                                loan_type = "distress_loan_02";
                            }

                            Connection con = DbConnection.getconnection();
                            PreparedStatement pst;

                            if (cmb_ChangeStatus.getSelectedIndex() == 0) {

                            } else {
                                String sql = "update `" + loan_type + "` set Status='" + cmb_ChangeStatus.getSelectedItem().toString() + "' where LoanReference='" + txt_loan_ref.getText() + "'";
                                pst = con.prepareStatement(sql);
                                pst.executeUpdate();
                                JOptionPane.showMessageDialog(rootPane, "Loan Ref: " + txt_loan_ref.getText() + "  Status Changed...!");
                            }

                        } else {
                            JOptionPane.showMessageDialog(rootPane, " You are NOT ALLOWED for this Operation ( Admin & Managment Staff Only )");
                        }

                    } else {
                        JOptionPane.showMessageDialog(rootPane, " User Name & Password NOT matched");
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        status_change();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cb_date_allStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cb_date_allStateChanged
        if (cb_date_all.isSelected()) {

            date_from.setEnabled(false);
            date_to.setEnabled(false);

        } else {
            date_from.setEnabled(true);
            date_to.setEnabled(true);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_cb_date_allStateChanged

    private void cb_date_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_date_allActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_date_allActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Loan_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Loan_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Loan_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Loan_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Loan_Details().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cb_date_all;
    private javax.swing.JComboBox<String> cmb_ChangeStatus;
    private javax.swing.JComboBox<String> cmb_loanStatus;
    private javax.swing.JComboBox<String> cmb_loanType;
    private com.toedter.calendar.JDateChooser date_from;
    private com.toedter.calendar.JDateChooser date_to;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JTable jTable_Installments;
    private javax.swing.JTable jTable_Loan_details;
    private javax.swing.JTextField txt_emp_name;
    private javax.swing.JTextField txt_empid;
    private javax.swing.JTextField txt_loan_ref;
    private javax.swing.JTextField txt_status;
    // End of variables declaration//GEN-END:variables
}
