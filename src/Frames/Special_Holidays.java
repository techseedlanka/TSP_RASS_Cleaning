/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import java.awt.Color;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * TECHSEED SOLUTIONS
 *
 * @author Sapumal Bandara @ TechSeed Solutions
 */
public class Special_Holidays extends javax.swing.JFrame {

    /**
     * Creates new form Special_Holidays
     */
    public Special_Holidays() {
        initComponents();
        TitleBar();
        txt_Year.setVisible(false);
        txt_month.setVisible(false);
        txt_date.setVisible(false);
        lbl_thisyear.setVisible(false);
        get_month_and_year();
        get_saved_data();
    }

    private void TitleBar() {

        this.setTitle("Special Holidays");
        this.setResizable(false);

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("techseed.png")));
    }

    private void get_month_and_year() {

        Date date = jCalendar1.getDate();

        if (date == null) {
            // jLabel2.setForeground(Color.red);

        } else {

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date2 = sdf.format(jCalendar1.getDate());
            txt_date.setText(date2);

            int m = jCalendar1.getDate().getMonth();

            int d = m + 1;
            String d1 = null;

            if (d == 1) {
                d1 = "January";
            }
            if (d == 2) {
                d1 = "February";
            }
            if (d == 3) {
                d1 = "March";
            }
            if (d == 4) {
                d1 = "April";
            }
            if (d == 5) {
                d1 = "May";
            }
            if (d == 6) {
                d1 = "June";
            }
            if (d == 7) {
                d1 = "July";
            }
            if (d == 8) {
                d1 = "August";
            }
            if (d == 9) {
                d1 = "September";
            }
            if (d == 10) {
                d1 = "October";
            }
            if (d == 11) {
                d1 = "November";
            }
            if (d == 12) {
                d1 = "December";
            }

            //String d1 = Integer.toHexString(d);
            txt_month.setText(d1);

            int year = jCalendar1.getDate().getYear();
            int j = year - 100;
            int k = j + 2000;

            txt_Year.setText(Integer.toString(k));
            lbl_thisyear.setText(Integer.toString(k));
        }

    }

    private void save() {

        if (txt_date.getText().isEmpty() | txt_Year.getText().isEmpty()) {

        } else {
            try {

                Connection con = DbConnection.getconnection();
                PreparedStatement pst1 = con.prepareStatement("delete from special_holidays_days where Year='" + txt_Year.getText() + "' and Month='" + txt_month.getText() + "' and Date='" + txt_date.getText() + "'");
                pst1.executeUpdate();

                PreparedStatement pst = con.prepareStatement("insert into special_holidays_days values('" + txt_Year.getText() + "','" + txt_month.getText() + "','" + txt_date.getText() + "')");
                pst.execute();

            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }

    private void get_saved_data() {

        try {

            Connection con = DbConnection.getconnection();
            PreparedStatement pst1 = con.prepareStatement("select *  from special_holidays_days where Year='" + lbl_thisyear.getText() + "' ");
            ResultSet rs = pst1.executeQuery();

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {

                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                dtm.addRow(v);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        txt_Year = new javax.swing.JTextField();
        txt_month = new javax.swing.JTextField();
        txt_date = new javax.swing.JTextField();
        lbl_thisyear = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        jLabel1.setText("Special Holidays");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 190, 40));
        getContentPane().add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 670, 10));

        jCalendar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.gray));
        jCalendar1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jCalendar1PropertyChange(evt);
            }
        });
        getContentPane().add(jCalendar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 250, 230));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Year", "Month", "Date"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(70);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 280, 240));

        jButton1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/trash_can_40.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, 70, 60));
        getContentPane().add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 670, 10));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow-40.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 70, 90));

        txt_Year.setEditable(false);
        txt_Year.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_Year, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 60, 23));

        txt_month.setEditable(false);
        txt_month.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 70, 23));

        txt_date.setEditable(false);
        txt_date.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txt_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 70, 23));

        lbl_thisyear.setText("jLabel2");
        getContentPane().add(lbl_thisyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 90, 20));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        get_month_and_year();

        if (txt_date.getText().isEmpty() | txt_date.getText() == null) {

        } else {

//            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
//            Vector v = new Vector();
//            v.add(txt_Year.getText());
//            v.add(txt_month.getText());
//            v.add(txt_date.getText());
//
//            dtm.addRow(v);
            save();
            get_saved_data();

            txt_Year.setText("");
            txt_month.setText("");
            txt_date.setText("");

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            Connection con = DbConnection.getconnection();
            PreparedStatement pst = null;
            if (jTable1.getRowCount() < 1) {

            } else {
                int reply = JOptionPane.showConfirmDialog(rootPane, "Do you want to Remove the Selected Row", "Remove Row", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {

//                    for (int r = 0; r < jTable1.getSelectedRowCount(); r++) {
                    String date = jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString();
                    pst = con.prepareStatement("delete from special_holidays_days where Date='" + date + "'");
                    pst.executeUpdate();

//                    }
                }

                get_saved_data();

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCalendar1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jCalendar1PropertyChange
        get_month_and_year();
        get_saved_data();        // TODO add your handling code here:
    }//GEN-LAST:event_jCalendar1PropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//*************************Developed By TechSeed Solutions*************************************************
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Special_Holidays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Special_Holidays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Special_Holidays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Special_Holidays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Special_Holidays().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbl_thisyear;
    private javax.swing.JTextField txt_Year;
    private javax.swing.JTextField txt_date;
    private javax.swing.JTextField txt_month;
    // End of variables declaration//GEN-END:variables

}
